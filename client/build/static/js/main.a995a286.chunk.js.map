{"version":3,"sources":["assests/confirmation.png","store.js","reducers/productReducers.js","constants/productConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/orderReducers.js","constants/orderConstants.js","constants/routes.js","components/SearchBox/SearchBox.js","components/Header/index.js","components/Footer/Footer.js","config.js","services/token.js","utils/http.js","utils/string.js","services/Product.js","utils/error.js","actions/productAction.js","components/Rating/Rating.js","components/Product/Product.js","components/Filter/Filter.js","components/Message/errorMessage.js","components/Loader/HomeLoader.js","components/Meta/Meta.js","pages/Home.js","components/productReview/ProductReview.js","components/Loader/SinglePageLoader.js","actions/cartAction.js","pages/Product.js","components/FormContainer/FormContainer.js","components/table/tableLayout.js","services/user.js","actions/userAction.js","pages/Login.js","pages/Cart.js","routes/PrivateRoute.js","routes/AdminRoute.js","components/CheckoutStep/CheckoutSteps.js","pages/Shipping.js","pages/Payment.js","services/order.js","actions/orderAction.js","components/Loader/TableLoader.js","components/Print/Print.js","pages/Profile.js","pages/PlaceOrder.js","pages/OrdersList.js","components/Message/successMessage.js","pages/ProductList.js","pages/UserList.js","pages/EditUser.js","pages/EditProduct.js","components/InfoMessage/Message.js","components/Loader/Loader.js","components/Loader/OrderLoader.js","pages/Order.js","pages/Logout.js","pages/Register.js","pages/ForgotPassword.js","pages/ResetPassword.js","pages/EmailVerification.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","productList","state","products","action","type","loading","payload","results","count","success","error","Product","product","productReview","productReviews","data","userLogin","userInfo","userRegister","message","createReview","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","productId","map","filter","createOrder","order","orderDetails","orderPay","orderDeliver","authOrders","orders","total","orderList","deleteProduct","createProductDetails","updateProductDetails","userList","users","userDeleteDetails","userUpdateDetails","userDetails","user","forgotPasswordDetails","resetPasswordDetails","initialState","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunk","LOGIN","PRODUCT","ORDER","PRODUCTS","USERS","SearchBox","useState","searchKey","setSearchKey","history","useHistory","Form","inline","onSubmit","e","preventDefault","push","pathname","FormControl","name","onChange","target","value","placeholder","className","Header","userAuthData","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","length","reduce","acc","qty","NavDropdown","title","Item","routes","role","Footer","Row","Col","Date","getFullYear","config","baseURI","process","payPal","esewaImageUrl","REACT_APP_ESEWA_IMAGE_URL","esewaPaymentUrl","REACT_APP_ESEWA_PAYMENT_URL","apiEndPoint","fetchProducts","fetchProduct","fetchProductReviews","createProduct","updateProduct","login","create","fetchUsers","verifyEmail","deleteUser","updateUser","fetchUser","forgotPassword","resetPassword","pay","deliverOrder","userOrder","getAccessToken","token","setToken","setItem","stringify","instance","axios","baseURL","headers","http","get","url","params","accessToken","responseType","authHeaders","tokenService","method","then","response","post","body","put","remove","interpolate","str","pinterpolate","filters","a","filterParams","Object","keys","forEach","key","hasOwnProperty","handleError","err","dispatch","productServices","Rating","text","color","style","defaultProps","Card","_id","Img","src","productImage","Body","Title","as","Text","averageRating","Reviews","price","useStyles","makeStyles","theme","typography","padding","spacing","formControl","margin","minWidth","top","selectEmpty","marginTop","Filtetr","sort","handleSort","setPriceRange","setLtORgt","ltORgt","handlePriceRange","handleFilters","classes","anchorEl","setAnchorEl","open","Boolean","undefined","Button","aria-describedby","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","FormControlLabel","control","Checkbox","checked","includes","inputProps","label","InputLabel","Select","labelId","MenuItem","TextField","autoComplete","required","ErrorMessage","header","reset","show","setShow","useDispatch","position","right","zIndex","Toast","delay","autohide","background","fontWeight","HomeLoader","Array","fill","index","sm","md","lg","xl","height","width","Meta","description","keywords","Helmet","content","Home","setSort","priceRange","setFilters","initialLoading","setInitialLoading","queryParams","URLSearchParams","window","location","search","searchProductKey","trim","useEffect","fetchProductList","join","productAction","filterPrevPrice","Filter","s","preState","prgressColor","ProductReview","setTitle","setText","rating","setRating","productReviewsData","reviewResponses","createReviewSuccess","createReviewLoading","ListGroup","review","userId","createdAt","substring","fullWidth","Number","autoWidth","disabled","CircularProgress","SinglePageLoader","addToCart","getState","payLoadForCartItem","productName","countInStock","left","ProductDetails","match","setQty","productData","createReviewError","Image","alt","fluid","FormContainer","children","xs","mainHeader","table","widths","bold","marginBottom","stack","email","layout","hLineWidth","line","vLineWidth","paddingBottom","bodyForOrders","headerRows","fillColor","o","i","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","bodyForUsers","u","verify","registerUser","Logout","removeItem","Login","setEmail","password","setPassword","redirect","split","redirectUserToRegisterRoute","userServices","authData","userAction","autoFocus","Cart","removeFromCartHandler","removeItemFromCart","rounded","toFixed","PrivateRoutes","Component","component","rest","render","props","AdminRoute","CheckoutSteps","step1","step2","step3","Shipping","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentMethod","setPaymentMethod","FormLabel","RadioGroup","aria-label","Radio","createPdfData","border","fontSize","alignment","styles","mainheader","info","marginLeft","h2","payOrder","orderId","paymentResult","orderServices","TableLoader","Table","striped","bordered","hover","responsive","Print","printAs","pdfMake","vfs","pdfFonts","Profile","console","log","docDefinition","createPdf","download","PlaceOrder","redirectUser","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","orderData","orderItems","shipping","payment","OrderList","SuccessMessage","ProductList","deleteProductData","deleteSuccess","deleteFail","createSuccess","createFail","createLoading","setName","setProductImage","brand","setBrand","setPrice","category","setCategory","setCountInStock","setDescription","openForm","setOpenForm","productListForAdmin","cancelCreateProduct","submitHandler","formData","FormData","append","deleteHandler","confirmAlert","customUI","Modal","size","aria-labelledby","centered","files","multiline","rows","openNewProductForm","UserList","userListDetails","userDelete","href","UpdateUser","updateLoading","updateError","updateSuccess","setRole","Success","setSuccess","updatedData","confirmationImg","ConfirmedAlert","EditProduct","EditProductLoading","EditProductError","EditProductSuccess","UpdatedData","Message","Alert","Loader","Spinner","animation","display","Order","sdkReady","setSdkReady","loadingPay","successPayMessage","loadingDeliver","successDeliver","refId","addPayPalScript","clientId","script","document","createElement","async","onload","appendChild","paypal","getOrder","OrderLoader","reference","getTime","toString","publicKey","amount","onSuccess","resultId","characters","charactersLength","charAt","floor","random","path","amt","psc","pdc","txAmt","tAmt","pid","scd","su","fu","form","setAttribute","hiddenField","submit","progressColor","Register","verificationMessage","setVerificationMessage","confirmPassword","setConfirmPassword","userRegisterData","setTimeout","handleSubmit","redirectUserToLoginRoute","ForgotPassword","newPassword","setNewPassword","resetPasswordData","EmailVerification","verificationCode","setVerificationCode","code","App","exact","ResetPassword","PrivateRoute","Payment","EditUser","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","StrictMode","getElementById","URL","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a995a286.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/confirmation.31a737c5.png\";","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport {\n  listProducts,\n  Product,\n  productReview,\n  createReview,\n  deleteProduct,\n  createProduct,\n  EditProduct,\n} from './reducers/productReducers';\n\nimport {\n  userLogin,\n  userRegister,\n  userList,\n  userDelete,\n  userUpdate,\n  getUser,\n  forgotPassword,\n  resetPassword,\n} from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  createOrderReducer,\n  getOrder,\n  orderPayReducer,\n  orderDeliverReducer,\n  authOrders,\n  listOrders,\n} from './reducers/orderReducers';\n\nconst rootReducer = combineReducers({\n  productList: listProducts,\n  Product: Product,\n  productReview: productReview,\n  userLogin: userLogin,\n  userRegister: userRegister,\n  createReview: createReview,\n  cart: cartReducer,\n  createOrder: createOrderReducer,\n  orderDetails: getOrder,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  authOrders: authOrders,\n  orderList: listOrders,\n  deleteProduct: deleteProduct,\n  createProductDetails: createProduct,\n  updateProductDetails: EditProduct,\n  userList: userList,\n  userDeleteDetails: userDelete,\n  userUpdateDetails: userUpdate,\n  userDetails: getUser,\n  forgotPasswordDetails: forgotPassword,\n  resetPasswordDetails: resetPassword,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst paymentMethodAddressFromStorage = localStorage.getItem('paymentMethod')\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\n  : '';\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n","import * as productConstants from '../constants/productConstants';\n\nexport const listProducts = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case productConstants.PRODUCTLIST_FETCH_START:\n      return {\n        loading: true,\n        products: [],\n      };\n    case productConstants.PRODUCTLIST_FETCH_SUCCESS:\n      return {\n        products: action.payload.results,\n        count: action.payload.count,\n        success: true,\n      };\n    case productConstants.PRODUCTLIST_FETCH_ERROR:\n      return {\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const Product = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case productConstants.PRODUCT_FETCH_START:\n      return {\n        loading: true,\n        product: {},\n      };\n    case productConstants.PRODUCT_FETCH_SUCCESS:\n      return {\n        product: action.payload,\n        success: true,\n      };\n    case productConstants.PRODUCT_FETCH_FAIL:\n      return {\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const productReview = (state = { productReviews: [] }, action) => {\n  switch (action.type) {\n    case productConstants.PRODUCTREVIEW_FETCH_START:\n      return {\n        loading: true,\n        productReviews: [],\n      };\n    case productConstants.PRODUCTREVIEW_FETCH_SUCCESS:\n      return {\n        productReviews: action.payload.data,\n        count: action.payload.count,\n        success: true,\n      };\n    case productConstants.PRODUCT_FETCH_FAIL:\n      return {\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const createReview = (state = {}, action) => {\n  switch (action.type) {\n    case productConstants.CREATE_REVIEW_START:\n      return {\n        loading: true,\n      };\n    case productConstants.CREATE_REVIEW_SUCCESS:\n      return {\n        success: true,\n      };\n    case productConstants.CREATE_REVIEW_FAIL:\n      return {\n        error: action.payload,\n      };\n    case productConstants.CREATE_REVIEW_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const deleteProduct = (state = {}, action) => {\n  switch (action.type) {\n    case productConstants.DELETE_PRODUCT_START:\n      return {\n        loading: true,\n      };\n    case productConstants.DELETE_PRODUCT_SUCCESS:\n      return {\n        success: true,\n      };\n    case productConstants.DELETE_PRODUCT_FAIL:\n      return {\n        error: action.payload,\n      };\n\n    case productConstants.DELETE_PRODUCT_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const createProduct = (state = {}, action) => {\n  switch (action.type) {\n    case productConstants.CREATE_PRODUCT_START:\n      return {\n        loading: true,\n      };\n    case productConstants.CREATE_PRODUCT_SUCCESS:\n      return {\n        success: true,\n      };\n    case productConstants.CREATE_PRODUCT_FAIL:\n      return {\n        error: action.payload,\n      };\n\n    case productConstants.CREATE_PRODUCT_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const EditProduct = (state = {}, action) => {\n  switch (action.type) {\n    case productConstants.EDIT_PRODUCT_START:\n      return {\n        loading: true,\n      };\n    case productConstants.EDIT_PRODUCT_SUCCESS:\n      return {\n        success: true,\n      };\n    case productConstants.EDIT_PRODUCT_FAIL:\n      return {\n        error: action.payload,\n      };\n    case productConstants.EDIT_PRODUCT_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","export const PRODUCTLIST_FETCH_START = 'PRODUCTLIST_FETCH_START';\nexport const PRODUCTLIST_FETCH_SUCCESS = 'PRODUCTLIST_FETCH_SUCCESS';\nexport const PRODUCTLIST_FETCH_ERROR = 'PRODUCTLIST_FETCH_ERROR';\n\nexport const PRODUCT_FETCH_START = 'PRODUCT_FETCH_START';\nexport const PRODUCT_FETCH_SUCCESS = 'PRODUCT_FETCH_SUCCESS';\nexport const PRODUCT_FETCH_FAIL = 'PRODUCT_FETCH_FAIL';\n\nexport const PRODUCTREVIEW_FETCH_START = 'PRODUCTREVIEW_FETCH_START';\nexport const PRODUCTREVIEW_FETCH_SUCCESS = 'PRODUCTREVIEW_FETCH_SUCCESS';\nexport const PRODUCTREVIEW_FETCH_FAIL = 'PRODUCTREVIEW_FETCH_FAIL';\n\nexport const CREATE_REVIEW_START = 'CREATE_REVIEW_START';\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\n\nexport const DELETE_PRODUCT_START = 'DELETE_PRODUCT_START';\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS';\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL';\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET';\n\nexport const CREATE_PRODUCT_START = 'CREATE_PRODUCT_START';\nexport const CREATE_PRODUCT_SUCCESS = 'CREATE_PRODUCT_SUCCESS';\nexport const CREATE_PRODUCT_FAIL = 'CREATE_PRODUCT_FAIL';\nexport const CREATE_PRODUCT_RESET = 'CREATE_PRODUCT_RESET';\n\nexport const EDIT_PRODUCT_START = 'EDIT_PRODUCT_START';\nexport const EDIT_PRODUCT_SUCCESS = 'EDIT_PRODUCT_SUCCESS';\nexport const EDIT_PRODUCT_FAIL = 'EDIT_PRODUCT_FAIL';\nexport const EDIT_PRODUCT_RESET = 'EDIT_PRODUCT_RESET';\n","import * as userConstants from '../constants/userConstants';\n\nexport const userLogin = (state = {}, action) => {\n  switch (action.type) {\n    case userConstants.USER_AUTH_START:\n      return {\n        loading: true,\n      };\n    case userConstants.USER_AUTH_SUCCESS:\n      return {\n        userInfo: action.payload,\n        success: true,\n      };\n    case userConstants.USER_AUTH_FAIL:\n      return {\n        error: action.payload,\n      };\n    case userConstants.RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegister = (state = {}, action) => {\n  switch (action.type) {\n    case userConstants.USER_REGISTER_START:\n      return {\n        loading: true,\n      };\n    case userConstants.USER_REGISTER_SUCCESS:\n      return {\n        message: action.payload,\n        success: true,\n      };\n    case userConstants.USER_REGISTER_FAIL:\n      return {\n        error: action.payload,\n      };\n    case userConstants.USER_REGISTER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userList = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case userConstants.USERLIST_FETCH_START:\n      return {\n        loading: true,\n      };\n    case userConstants.USERLIST_FETCH_SUCCESS:\n      return {\n        users: action.payload.results,\n        count: action.payload.count,\n        success: true,\n      };\n    case userConstants.USERLIST_FETCH_FAIL:\n      return {\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const userDelete = (state = {}, action) => {\n  switch (action.type) {\n    case userConstants.USER_DELETE_START:\n      return {\n        loading: true,\n      };\n    case userConstants.USER_DELETE_SUCCESS:\n      return {\n        success: true,\n      };\n    case userConstants.USER_DELETE_FAIL:\n      return {\n        error: action.payload,\n      };\n    case userConstants.USER_DELETE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userUpdate = (state = {}, action) => {\n  switch (action.type) {\n    case userConstants.USER_EDIT_START:\n      return {\n        loading: true,\n      };\n    case userConstants.USER_EDIT_SUCCESS:\n      return {\n        success: true,\n      };\n    case userConstants.USER_EDIT_FAIL:\n      return {\n        error: action.payload,\n      };\n    case userConstants.USER_EDIT_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const getUser = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case userConstants.USER_FETCH_START:\n      return {\n        loading: true,\n      };\n    case userConstants.USER_FETCH_SUCCESS:\n      return {\n        success: true,\n        user: action.payload,\n      };\n    case userConstants.USER_FETCH_FAIL:\n      return {\n        error: action.payload,\n      };\n    case userConstants.USER_FETCH_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const forgotPassword = (state = { message: '' }, action) => {\n  switch (action.type) {\n    case userConstants.FORGOT_PASSWORD_SEND_START:\n      return {\n        loading: true,\n      };\n    case userConstants.FORGOT_PASSWORD_SEND_SUCCESS:\n      return {\n        success: true,\n        message: action.payload,\n      };\n    case userConstants.FORGOT_PASSWORD_SEND_FAIL:\n      return {\n        error: action.payload,\n      };\n    case userConstants.FORGOT_PASSWORD_SEND_RSET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const resetPassword = (state = { message: '' }, action) => {\n  switch (action.type) {\n    case userConstants.RESET_PASSWORD_START:\n      return {\n        loading: true,\n      };\n    case userConstants.RESET_PASSWORD_SUCCESS:\n      return {\n        success: true,\n        message: action.payload,\n      };\n    case userConstants.RESET_PASSWORD_FAIL:\n      return {\n        error: action.payload,\n      };\n    case userConstants.RESET_PASSWORD_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","export const USER_AUTH_START = 'USER_AUTH_START';\nexport const USER_AUTH_SUCCESS = 'USER_AUTH_SUCCESS';\nexport const USER_AUTH_FAIL = 'USER_AUTH_FAIL';\nexport const RESET = 'RESET';\nexport const LOGOUT = 'LOGOUT';\n\nexport const USER_REGISTER_START = 'USER_REGISTER_START';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\n\nexport const USERLIST_FETCH_START = 'USERLIST_FETCH_START';\nexport const USERLIST_FETCH_SUCCESS = 'USERLIST_FETCH_SUCCESS';\nexport const USERLIST_FETCH_FAIL = 'USERLIST_FETCH_FAIL';\n\nexport const USER_DELETE_START = 'USER_DELETE_START';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET';\n\nexport const USER_EDIT_START = 'USER_EDIT_START';\nexport const USER_EDIT_SUCCESS = 'USER_EDIT_SUCCESS';\nexport const USER_EDIT_FAIL = 'USER_EDIT_FAIL';\nexport const USER_EDIT_RESET = 'USER_EDIT_RESET';\n\nexport const USER_FETCH_START = 'USER_FETCH_START';\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS';\nexport const USER_FETCH_FAIL = 'USER_FETCH_FAIL';\nexport const USER_FETCH_RESET = 'USER_FETCH_RESET';\n\nexport const FORGOT_PASSWORD_SEND_START = 'FORGOT_PASSWORD_SEND_START';\nexport const FORGOT_PASSWORD_SEND_SUCCESS = 'FORGOT_PASSWORD_SEND_SUCCESS';\nexport const FORGOT_PASSWORD_SEND_FAIL = 'FORGOT_PASSWORD_SEND_FAIL';\nexport const FORGOT_PASSWORD_SEND_RSET = 'FORGOT_PASSWORD_SEND_RSET';\n\nexport const RESET_PASSWORD_START = 'RESET_PASSWORD_START';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\nexport const RESET_PASSWORD_RESET = 'RESET_PASSWORD_RESET';\n","import * as cartConstants from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {}, paymentMethod: '' }, action) => {\n  switch (action.type) {\n    case cartConstants.ADD_TO_CART_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.productId === item.productId);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) => (x.productId === existItem.productId ? item : x)),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case cartConstants.CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.productId !== action.payload),\n      };\n    case cartConstants.CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case cartConstants.CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    case cartConstants.CART_RESET:\n      return {\n        cartItems: [],\n        shippingAddress: {},\n        paymentMethod: '',\n      };\n    default:\n      return state;\n  }\n};\n","export const ADD_TO_CART_ITEM = 'ADD_TO_CART_ITEM';\nexport const ADD_TO_CART_FAIL = 'ADD_TO_CART_FAIL';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\nexport const CART_RESET = 'CART_RESET';\n","import * as orderConstants from '../constants/orderConstants';\n\nexport const createOrderReducer = (state = { order: {} }, action) => {\n  switch (action.type) {\n    case orderConstants.CREATE_ORDER_START:\n      return {\n        loading: true,\n      };\n    case orderConstants.CREATE_ORDER_SUCCESS:\n      return {\n        order: action.payload,\n        success: true,\n      };\n    case orderConstants.CREATE_ORDER_FAIL:\n      return {\n        error: action.payload,\n      };\n    case orderConstants.CREATE_ORDER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const getOrder = (state = {}, action) => {\n  switch (action.type) {\n    case orderConstants.GET_ORDER_START:\n      return {\n        loading: true,\n      };\n    case orderConstants.GET_ORDER_SUCCESS:\n      return {\n        order: action.payload,\n        success: true,\n      };\n    case orderConstants.GET_ORDER_FAIL:\n      return {\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case orderConstants.ORDER_PAY_START:\n      return {\n        loading: true,\n      };\n    case orderConstants.ORDER_PAY_SUCCESS:\n      return {\n        success: action.payload,\n      };\n    case orderConstants.ORDER_PAY_FAIL:\n      return {\n        error: action.payload,\n      };\n    case orderConstants.ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case orderConstants.ORDER_DILIVERD_START:\n      return {\n        loading: true,\n      };\n    case orderConstants.ORDER_DILIVERD_SUCCESS:\n      return {\n        success: true,\n      };\n    case orderConstants.ORDER_DILIVERD_FAIL:\n      return {\n        error: action.payload,\n      };\n    case orderConstants.ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const authOrders = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case orderConstants.AUTH_ORDER_FETCH_START:\n      return {\n        loading: true,\n      };\n    case orderConstants.AUTH_ORDER_FETCH_SUCCESS:\n      return {\n        success: true,\n        orders: action.payload,\n        count: action.total,\n      };\n    case orderConstants.AUTH_ORDER_FETCH_FAIL:\n      return {\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const listOrders = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case orderConstants.ORDERLIST_FETCH_START:\n      return {\n        loading: true,\n      };\n    case orderConstants.ORDERLIST_FETCH_SUCCESS:\n      return {\n        success: true,\n        orders: action.payload.results,\n        count: action.payload.count,\n      };\n    case orderConstants.ORDERLIST_FETCH_FAIL:\n      return {\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const CREATE_ORDER_START = 'CREATE_ORDER_START';\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL';\nexport const CREATE_ORDER_RESET = 'CREATE_ORDER_RESET';\n\nexport const GET_ORDER_START = 'GET_ORDER_START';\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS';\nexport const GET_ORDER_FAIL = 'GET_ORDER_FAIL';\n\nexport const ORDER_PAY_START = 'ORDER_PAY_START';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_DILIVERD_START = 'ORDER_DILIVERD_START';\nexport const ORDER_DILIVERD_SUCCESS = 'ORDER_DILIVERD_SUCCESS';\nexport const ORDER_DILIVERD_FAIL = 'ORDER_DILIVERD_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n\nexport const AUTH_ORDER_FETCH_START = 'AUTH_ORDER_FETCH_START';\nexport const AUTH_ORDER_FETCH_SUCCESS = 'AUTH_ORDER_FETCH_SUCCESS';\nexport const AUTH_ORDER_FETCH_FAIL = 'AUTH_ORDER_FETCH_FAIL';\n\nexport const ORDERLIST_FETCH_START = 'ORDERLIST_FETCH_START';\nexport const ORDERLIST_FETCH_SUCCESS = 'ORDERLIST_FETCH_SUCCESS';\nexport const ORDERLIST_FETCH_FAIL = 'ORDERLIST_FETCH_FAIL';\n","export const HOME = '/';\nexport const LOGIN = '/login';\nexport const RESET_PASSWORD = '/reset-password';\nexport const FORGOT_PASSWORD = '/forgot-passsword';\nexport const EMAIL_VERIFICATION = '/email-verification';\nexport const LOGOUT = '/logout';\nexport const REGISTER = '/register';\nexport const PRODUCT = '/product/:productId';\nexport const CART = '/cart';\nexport const SHIPPING = '/shipping';\nexport const PAYMENT = '/payment';\nexport const PLACE_ORDER = '/place-order';\nexport const ORDER = '/order/:orderId';\nexport const PROFILE = '/profile';\nexport const ORDERS = '/admin/order-list';\nexport const PRODUCTS = '/admin/product-list';\nexport const PRODUCT_EDIT = '/admin/product/:productId/edit';\nexport const USERS = '/admin/user-list';\nexport const USER_EDIT = '/admin/user/:userId/edit';\n","import React, { useState } from 'react';\nimport { Form, FormControl } from 'react-bootstrap';\nimport * as routes from '../../constants/routes';\nimport { useHistory } from 'react-router-dom';\nimport '../style.css';\nconst SearchBox = () => {\n  const [searchKey, setSearchKey] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (searchKey !== '') {\n      history.push(`/?search=${searchKey}`);\n    } else {\n      history.push({\n        pathname: routes.HOME,\n      });\n    }\n  };\n\n  return (\n    <Form inline onSubmit={handleSubmit}>\n      <FormControl\n        type=\"text\"\n        name=\"seacrh\"\n        onChange={(e) => setSearchKey(e.target.value)}\n        placeholder=\"Search product...\"\n        className=\"mr-sm-2\"\n      />\n      <i className=\"fas fa-search\"></i>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useSelector } from 'react-redux';\nimport SearchBox from '../SearchBox/SearchBox';\nimport * as routes from '../../constants/routes';\nimport '../style.css';\n\nconst Header = () => {\n  const userAuthData = useSelector((state) => state.userLogin);\n  const cart = useSelector((state) => state.cart);\n\n  const { cartItems } = cart;\n\n  const { userInfo } = userAuthData;\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to={routes.HOME}>\n            <Navbar.Brand>MamaIfy's Shop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to={routes.CART}>\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>{' '}\n                  {cartItems.length > 0 && (\n                    <span className=\"cart\">{cartItems.reduce((acc, item) => acc + item.qty, 0)}</span>\n                  )}\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to={routes.PROFILE}>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to={routes.LOGOUT}>\n                    <NavDropdown.Item>Logout</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to={routes.LOGIN}>\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.role === 'admin' && (\n                <NavDropdown title=\"Admin\" id=\"adminMenu\">\n                  <LinkContainer to={routes.USERS}>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to={routes.PRODUCTS}>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to={routes.ORDERS}>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; {new Date().getFullYear()} MamaIfy's Shop</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/**\n * Application wide configuration\n */\nconst config = {\n  baseURI: process.env.REACT_APP_API_BASE_URL,\n  payPal: process.env.REACT_APP_API_PAYPAL,\n  esewaImageUrl: process.env.REACT_APP_ESEWA_IMAGE_URL,\n  esewaPaymentUrl: process.env.REACT_APP_ESEWA_PAYMENT_URL,\n  apiEndPoint: {\n    product: {\n      fetchProducts: '/product',\n      fetchProduct: '/product/:id',\n      fetchProductReviews: '/product/:id/reviews',\n      createReview: '/product/:id/reviews',\n      deleteProduct: '/product/:id',\n      createProduct: '/product',\n      updateProduct: '/product/:id',\n    },\n    user: {\n      login: '/auth/login',\n      create: '/auth/register',\n      fetchUsers: '/user',\n      verifyEmail: '/auth/verify-email',\n      deleteUser: '/user/:id',\n      updateUser: '/user/:id',\n      fetchUser: '/user/:id',\n      forgotPassword: '/auth/forgot-password',\n      resetPassword: '/auth/reset-password',\n    },\n    order: {\n      createOrder: '/order',\n      order: '/order/:id',\n      pay: '/order/:id/pay',\n      deliverOrder: '/order/:id/deliver',\n      userOrder: '/order/auth-orders',\n      orders: '/order',\n    },\n  },\n};\n\nexport default config;\n","/**\n *\n * @returns {Stirng}\n */\nexport function getAccessToken() {\n  return JSON.parse(localStorage.getItem('userInfo'))?.token || '';\n}\n\n/**\n * Remove token from local storage\n */\nexport function removeToken() {\n  localStorage.removeItem('userInfo');\n}\n\n/**\n * Set token in local storage\n */\nexport function setToken(userInfo) {\n  localStorage.setItem('userInfo', JSON.stringify(userInfo));\n}\n","import axios from 'axios';\nimport config from '../config';\nimport * as tokenService from '../services/token';\n\nconst instance = axios.create({\n  baseURL: config.baseURI,\n  headers: {\n    'Content-type': 'application/json',\n  },\n});\n\n/**\n *\n * @param {String} url The url fro the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * @param {Boolean} [config.accessToken] Whether or not to include\n * access-token header\n * @returns {Promise}\n */\nfunction get(url, { params = {}, accessToken = false, responseType = 'json', headers = {} } = {}) {\n  const authHeaders = {};\n\n  if (accessToken) {\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\n  }\n\n  return instance({\n    url,\n    params,\n    responseType,\n    method: 'get',\n    headers: { ...authHeaders, ...headers },\n  }).then((response) => response);\n}\n\n/**\n *\n * @param {String} url The url fro the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * @param {Object} [config.body] An object that will be sent in the request\n * @param {Boolean} [config.accessToken] Whether or not to include\n * access-token header\n * @returns {Promise}\n */\nfunction post(url, { params = {}, body = {}, accessToken = false, headers = {} } = {}) {\n  const authHeaders = {};\n\n  if (accessToken) {\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\n  }\n\n  return instance({\n    url,\n    params,\n    data: body,\n    method: 'post',\n    headers: { ...authHeaders, ...headers },\n  }).then((response) => response);\n}\n\n/**\n *\n * @param {String} url The url fro the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * @param {Object} [config.body] An object that will be sent in the request\n * @param {Boolean} [config.accessToken] Whether or not to include\n * access-token header\n * @returns {Promise}\n */\nfunction put(url, { params = {}, body = {}, accessToken = false, headers = {} } = {}) {\n  const authHeaders = {};\n\n  if (accessToken) {\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\n  }\n\n  return instance({\n    url,\n    params,\n    data: body,\n    method: 'put',\n    headers: { ...authHeaders, ...headers },\n  }).then((response) => response);\n}\n\n/**\n *\n * @param {String} url The url fro the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * @param {Boolean} [config.accessToken] Whether or not to include\n * access-token header\n * @returns {Promise}\n */\nfunction remove(url, { params = {}, accessToken = false, headers = {} } = {}) {\n  const authHeaders = {};\n\n  if (accessToken) {\n    authHeaders['Authorization'] = `Bearer ${tokenService.getAccessToken()}`;\n  }\n\n  return instance({\n    url,\n    params,\n    method: 'delete',\n    headers: { ...authHeaders, ...headers },\n  }).then((response) => response);\n}\n\nconst http = {\n  ...instance,\n  get,\n  post,\n  put,\n  remove,\n};\n\nexport default http;\n","import pinterpolate from 'pinterpolate';\n\n/**\n *\n * @param {String} str\n * @param {Object} params\n * @returns {String}\n * example interpolate('product/:id',{id:2})\n * => 'product/2'\n */\nexport const interpolate = (str, params) => pinterpolate(str, params);\n","import config from '../config';\nimport http from '../utils/http';\nimport { interpolate } from '../utils/string';\n\n/**\n *\n * @param {Object} filters\n * @returns {Array} data\n */\nexport const fetchProducts = async (filters) => {\n  const { data } = await http.get(config.apiEndPoint.product.fetchProducts, {\n    params: {\n      ...filters,\n    },\n  });\n  return data.data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const fetchProduct = async (id) => {\n  const url = interpolate(config.apiEndPoint.product.fetchProduct, { id: id });\n\n  const { data } = await http.get(url);\n\n  return data.data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\n\nexport const fetchProductReviews = async (id) => {\n  const url = interpolate(config.apiEndPoint.product.fetchProductReviews, {\n    id: id,\n  });\n  const { data } = await http.get(url);\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const createReview = async (id, body) => {\n  const url = interpolate(config.apiEndPoint.product.createReview, {\n    id: id,\n  });\n  const { data } = await http.post(url, {\n    body,\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const deleteProduct = async (id) => {\n  const url = interpolate(config.apiEndPoint.product.deleteProduct, {\n    id: id,\n  });\n  const { data } = await http.remove(url, {\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Object} body\n * @returns {Object} data\n */\nexport const createProduct = async (body) => {\n  const { data } = await http.post(config.apiEndPoint.product.createProduct, {\n    body,\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const updateProduct = async (id, body) => {\n  const url = interpolate(config.apiEndPoint.product.updateProduct, {\n    id: id,\n  });\n  const { data } = await http.put(url, {\n    body,\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Object} filters\n */\nexport const filterParams = (filters) => {\n  Object.keys(filters).forEach((key) => {\n    if (filters.hasOwnProperty(key)) {\n      if (filters[key] === '') {\n        delete filters[key];\n      }\n    }\n  });\n};\n","/**\n *\n * @param {Object} err\n * @returns {String}\n */\nexport const handleError = (err) => {\n  if (err.response) {\n    if (err.response.data.error) {\n      return err.response.data.error;\n    } else {\n      return 'Somethind went wrong!';\n    }\n  } else {\n    return err.message;\n  }\n};\n","import * as productServices from '../services/Product';\nimport { handleError } from '../utils/error';\nimport * as productConstants from '../constants/productConstants';\n\nexport const productList = (filters, initialLoading) => async (dispatch) => {\n  try {\n    if (initialLoading) {\n      dispatch({ type: productConstants.PRODUCTLIST_FETCH_START });\n    }\n\n    productServices.filterParams(filters);\n\n    const { results, count } = await productServices.fetchProducts(filters);\n\n    dispatch({\n      type: productConstants.PRODUCTLIST_FETCH_SUCCESS,\n      payload: { results, count },\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.PRODUCTLIST_FETCH_ERROR,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const productListForAdmin = (initialLoading) => async (dispatch) => {\n  try {\n    if (initialLoading) {\n      dispatch({ type: productConstants.PRODUCTLIST_FETCH_START });\n    }\n\n    const { results, count } = await productServices.fetchProducts({});\n\n    dispatch({\n      type: productConstants.PRODUCTLIST_FETCH_SUCCESS,\n      payload: { results, count },\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.PRODUCTLIST_FETCH_ERROR,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const product = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: productConstants.PRODUCT_FETCH_START });\n\n    const data = await productServices.fetchProduct(id);\n\n    dispatch({\n      type: productConstants.PRODUCT_FETCH_SUCCESS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.PRODUCT_FETCH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const productReviews = (id, initialLoading) => async (dispatch) => {\n  try {\n    if (initialLoading) {\n      dispatch({ type: productConstants.PRODUCTREVIEW_FETCH_START });\n    }\n\n    const { data, count } = await productServices.fetchProductReviews(id);\n\n    dispatch({\n      type: productConstants.PRODUCTREVIEW_FETCH_SUCCESS,\n      payload: {\n        data,\n        count,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.PRODUCTREVIEW_FETCH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const createReview = (id, title, text, rating) => async (dispatch) => {\n  try {\n    dispatch({ type: productConstants.CREATE_REVIEW_START });\n\n    const body = {\n      title,\n      text,\n      rating,\n    };\n\n    await productServices.createReview(id, body);\n\n    dispatch({\n      type: productConstants.CREATE_REVIEW_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.CREATE_REVIEW_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: productConstants.DELETE_PRODUCT_START });\n\n    await productServices.deleteProduct(id);\n\n    dispatch({\n      type: productConstants.DELETE_PRODUCT_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.DELETE_PRODUCT_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const createProduct = (formData) => async (dispatch) => {\n  try {\n    dispatch({ type: productConstants.CREATE_PRODUCT_START });\n\n    await productServices.createProduct(formData);\n\n    dispatch({\n      type: productConstants.CREATE_PRODUCT_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.CREATE_PRODUCT_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const EditProduct = (id, UpdatedData) => async (dispatch) => {\n  try {\n    dispatch({ type: productConstants.EDIT_PRODUCT_START });\n\n    await productServices.updateProduct(id, UpdatedData);\n\n    dispatch({\n      type: productConstants.EDIT_PRODUCT_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: productConstants.EDIT_PRODUCT_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n","import React from 'react';\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: '#f8e825',\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Rating from '../Rating/Rating';\nimport * as routes from '../../constants/routes';\nimport { interpolate } from '../../utils/string';\nimport 'animate.css';\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded  animate__animated animate__fadeInUp\">\n      <Link to={interpolate(routes.PRODUCT, { productId: product._id })}>\n        <Card.Img src={product.productImage} variant=\"top\" />\n      </Link>\n\n      <Card.Body>\n        <Link to={interpolate(routes.PRODUCT, { productId: product._id })}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          <Rating value={product.averageRating} text={`${product.Reviews ? product.Reviews.length : 0} reviews`} />\n        </Card.Text>\n\n        <Card.Text as=\"h3\">NGN{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Checkbox, FormControlLabel, TextField } from '@material-ui/core';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    top: -24,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction Filtetr({ sort, handleSort, setPriceRange, setLtORgt, ltORgt, handlePriceRange, handleFilters, filters }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n        Filter\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>\n          <h6>Sort By</h6>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={sort.includes('name')}\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                value=\"name\"\n                onChange={(e) => handleSort(e.target.value)}\n              />\n            }\n            label=\"Name\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={sort.includes('price')}\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                value=\"price\"\n                onChange={(e) => handleSort(e.target.value)}\n              />\n            }\n            label=\"Price\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={sort.includes('averageRating')}\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                value=\"averageRating\"\n                onChange={(e) => handleSort(e.target.value)}\n              />\n            }\n            label=\"Rating\"\n          />\n\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              onChange={(e) => handleFilters('category', e.target.value)}\n              label=\"Category\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value=\"Vegetable\">Fresh Vegetables</MenuItem>\n              <MenuItem value=\"Foodstuffs\">Food Stuffs</MenuItem>\n              <MenuItem value=\"Provision\">Provisions</MenuItem>\n            </Select>\n          </FormControl>\n          <div className=\"mt-4 mb-4\">\n            <TextField\n              autoComplete=\"priceRange\"\n              name=\"priceRange\"\n              variant=\"outlined\"\n              type=\"number\"\n              required\n              id=\"priceRange\"\n              placeholder=\"Price Range\"\n              label=\"Price Range\"\n              onChange={(e) => setPriceRange(e.target.value)}\n            />{' '}\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={ltORgt === 'lt'}\n                  color=\"primary\"\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  value=\"lt\"\n                  onChange={(e) => setLtORgt(e.target.value)}\n                />\n              }\n              label=\"Less than\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={ltORgt === 'gte'}\n                  color=\"primary\"\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                  value=\"gte\"\n                  onChange={(e) => setLtORgt(e.target.value)}\n                />\n              }\n              label=\"Greater Or equal to\"\n            />\n          </div>\n          <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handlePriceRange}>\n              Done\n            </Button>\n          </div>\n        </Typography>\n      </Popover>\n    </div>\n  );\n}\nexport default Filtetr;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Toast } from 'react-bootstrap';\nimport 'animate.css';\n\nconst ErrorMessage = ({ header, message, reset }) => {\n  const [show, setShow] = useState(true);\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (reset) {\n      dispatch({ type: reset });\n    }\n    setShow(false);\n  };\n\n  return (\n    <>\n      <div style={{ position: 'fixed', right: '0', zIndex: '20180210' }}>\n        <Toast onClose={action} show={show} delay={3000} autohide className=\"animate__animated animate__shakeX\">\n          <Toast.Header style={{ background: 'red', color: 'white', fontWeight: 'bold' }}>\n            <strong className=\"mr-auto\">{header}</strong>\n          </Toast.Header>\n          <Toast.Body>{message}</Toast.Body>\n        </Toast>\n      </div>\n    </>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst HomeLoader = () => {\n  return (\n    <Row>\n      {Array(8)\n        .fill()\n        .map((item, index) => {\n          return (\n            <Col key={index} sm={12} md={6} lg={4} xl={3}>\n              <Card className=\"my-3 p-3 rounded\">\n                <Card.Body>\n                  <SkeletonTheme color=\"lightGray\">\n                    <Skeleton height={180} width={'100%'} />\n                    <br />\n\n                    <Skeleton width={`60%`} />\n                    <br />\n\n                    <Skeleton width={`90%`} />\n                  </SkeletonTheme>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n    </Row>\n  );\n};\n\nexport default HomeLoader;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keyword\" content={keywords} />\n    </Helmet>\n  );\n};\n\nMeta.defaultProps = {\n  title: 'Welcome To MamaIfy\\'s\\' Shop',\n  description: 'We sell the best food products for cheap',\n  keywords: 'Fresh Vegetables, food stuffs and provisions',\n};\n\nexport default Meta;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport * as productAction from '../actions/productAction';\nimport Product from '../components/Product/Product';\nimport Filter from '../components/Filter/Filter';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport HomeLoader from '../components/Loader/HomeLoader';\nimport Meta from '../components/Meta/Meta';\nimport * as routes from '../constants/routes';\n\nconst Home = () => {\n  const [sort, setSort] = useState([]);\n  const [priceRange, setPriceRange] = useState('');\n  const [ltORgt, setLtORgt] = useState('');\n  const [filters, setFilters] = useState({});\n\n  const [initialLoading, setInitialLoading] = useState(true);\n\n  const productList = useSelector((state) => state.productList);\n\n  const { loading, products, count, error, success } = productList;\n\n  const queryParams = new URLSearchParams(window.location.search);\n  const searchProductKey = queryParams.get('search') ? queryParams.get('search').trim() : '';\n\n  const dispatch = useDispatch();\n\n  const handleFilters = (key, value) => {\n    setFilters({ ...filters, [key]: value });\n  };\n\n  useEffect(() => {\n    if (success && initialLoading) {\n      setInitialLoading(false);\n    } else {\n      fetchProductList();\n    }\n    // eslint-disable-next-line\n  }, [dispatch, filters, success]);\n\n  useEffect(() => {\n    handleFilters('keyWord', searchProductKey);\n    // eslint-disable-next-line\n  }, [searchProductKey]);\n\n  useEffect(() => {\n    handleFilters('sort', sort.join(','));\n    // eslint-disable-next-line\n  }, [sort]);\n\n  const fetchProductList = () => {\n    dispatch(\n      productAction.productList(\n        {\n          ...filters,\n        },\n        initialLoading\n      )\n    );\n  };\n\n  const handleSort = (value) => {\n    sort.includes(value) ? setSort(sort.filter((s) => s !== value)) : setSort((preState) => [...preState, value]);\n  };\n\n  const handlePriceRange = () => {\n    if ([priceRange, ltORgt].includes('')) {\n      return;\n    }\n    filterPrevPrice();\n    handleFilters(`price[${ltORgt}]`, priceRange);\n  };\n\n  const filterPrevPrice = () => {\n    const filterprice = Object.keys(filters).filter((price) => ['price[lt]', 'price[gte]'].includes(price));\n    filterprice.forEach((price) => {\n      if (filters[price]) {\n        delete filters[price];\n      }\n    });\n  };\n\n  return (\n    <>\n      <Meta />\n      {loading ? (\n        <HomeLoader />\n      ) : error ? (\n        <ErrorMessage header=\"Something went wrong\" message={error} />\n      ) : (\n        <>\n          {searchProductKey ? (\n            <>\n              <Link to={routes.HOME} className=\"btn btn-light\">\n                Go Back\n              </Link>\n              <h1>\n                Search Products for {searchProductKey}({count})\n              </h1>\n            </>\n          ) : (\n            <div className=\"clearfix\">\n              <span className=\"float-left\">\n                <h1>Latest Products ({count})</h1>\n              </span>\n              <span className=\"float-right\">\n                {' '}\n                <Filter\n                  sort={sort}\n                  handleSort={handleSort}\n                  setPriceRange={setPriceRange}\n                  setLtORgt={setLtORgt}\n                  ltORgt={ltORgt}\n                  handlePriceRange={handlePriceRange}\n                  handleFilters={handleFilters}\n                  filters={filters}\n                />\n              </span>\n            </div>\n          )}\n          {!products.length && <h4>No Products</h4>}\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, ListGroup, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as productAction from '../../actions/productAction';\nimport ErrorMessage from '../Message/errorMessage';\nimport { Link } from 'react-router-dom';\nimport Rating from '../Rating/Rating';\nimport {\n  Select,\n  Button,\n  FormControl,\n  makeStyles,\n  MenuItem,\n  InputLabel,\n  TextField,\n  CircularProgress,\n} from '@material-ui/core/';\n\nimport * as productConstants from '../../constants/productConstants';\nimport * as routes from '../../constants/routes';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst ProductReview = ({ productId }) => {\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [rating, setRating] = useState('');\n\n  const classes = useStyles();\n\n  const productReviewsData = useSelector((state) => state.productReview);\n  const reviewResponses = useSelector((state) => state.createReview);\n\n  const { success: createReviewSuccess, loading: createReviewLoading } = reviewResponses;\n\n  const userAuthData = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userAuthData;\n\n  const { loading, productReviews, count, error, success } = productReviewsData;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (createReviewSuccess) {\n      setTitle('');\n      setText('');\n      setRating('');\n      dispatch({ type: productConstants.CREATE_REVIEW_RESET });\n    }\n\n    dispatch(productAction.productReviews(productId, initialLoading));\n\n    // eslint-disable-next-line\n  }, [dispatch, createReviewSuccess]);\n\n  useEffect(() => {\n    if (success && initialLoading) {\n      setInitialLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [dispatch, success]);\n\n  const handleCreateReview = (e) => {\n    e.preventDefault();\n\n    dispatch(productAction.createReview(productId, title, text, rating));\n  };\n\n  return loading ? (\n    <p>Loding....</p>\n  ) : error ? (\n    <ErrorMessage header=\"Something went wrong\" message={error} />\n  ) : (\n    <>\n      <Row>\n        <Col md={6}>\n          <h2>Reviews({count})</h2>\n          {!productReviews.length && <h4>No Reviews</h4>}\n          <ListGroup variant=\"flush\">\n            {productReviews.map((review) => (\n              <ListGroup.Item key={review._id}>\n                <strong>{review.userId.name}</strong>\n\n                <Rating value={review.rating} />\n                <p>{review.createdAt.substring(0, 10)}</p>\n                <p>{review.text}</p>\n              </ListGroup.Item>\n            ))}\n            <ListGroup.Item>\n              <h2>Write a Customer Review</h2>\n\n              {userInfo ? (\n                <Form onSubmit={handleCreateReview}>\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"text\"\n                    margin=\"normal\"\n                    placeholder=\"Write a title\"\n                    required\n                    fullWidth\n                    id=\"title\"\n                    label=\"Write a title\"\n                    name=\"title\"\n                    autoComplete=\"title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"text\"\n                    margin=\"normal\"\n                    placeholder=\"Write a comment\"\n                    required\n                    fullWidth\n                    id=\"comment\"\n                    label=\"Write a comment\"\n                    name=\"comment\"\n                    autoComplete=\"comment\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                  />\n\n                  <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Rating</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      onChange={(e) => setRating(Number(e.target.value))}\n                      label=\"Rating\"\n                      autoWidth\n                      value={rating}\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value=\"1\">1 - Poor</MenuItem>\n                      <MenuItem value=\"2\">2 - Fair</MenuItem>\n                      <MenuItem value=\"3\">3 - Good</MenuItem>\n                      <MenuItem value=\"4\">4 - Very Good</MenuItem>\n                      <MenuItem value=\"5\">5 - Excellent</MenuItem>\n                    </Select>\n                  </FormControl>\n                  <div className=\"my-3\">\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={createReviewLoading}>\n                      {createReviewLoading ? (\n                        <CircularProgress color=\"inherit\" className={classes.prgressColor} />\n                      ) : (\n                        <>Submit</>\n                      )}\n                    </Button>\n                  </div>\n                </Form>\n              ) : (\n                <>\n                  Please <Link to={routes.LOGIN}>sign in</Link> to write a review{' '}\n                </>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ProductReview;\n","import React from 'react';\nimport { Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst SinglePageLoader = () => {\n  return (\n    <Row>\n      <Col md={6}>\n        <SkeletonTheme color=\"lightGray\">\n          <Skeleton height={350} width={'100%'} />\n        </SkeletonTheme>\n      </Col>\n      <Col md={3}>\n        <ListGroup variant=\"flush\">\n          {Array(7)\n            .fill()\n            .map((data, index) => (\n              <ListGroup.Item key={index}>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </ListGroup.Item>\n            ))}\n        </ListGroup>\n      </Col>\n      <Col md={3}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            {Array(4)\n              .fill()\n              .map((data, index) => (\n                <ListGroup.Item key={index}>\n                  <SkeletonTheme color=\"lightGray\">\n                    <Skeleton />\n                  </SkeletonTheme>\n                </ListGroup.Item>\n              ))}\n            <ListGroup.Item>\n              <SkeletonTheme color=\"lightGray\">\n                <Skeleton height={30} />\n              </SkeletonTheme>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SinglePageLoader;\n","import * as productServices from '../services/Product';\nimport { handleError } from '../utils/error';\nimport * as cartConstants from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  try {\n    const data = await productServices.fetchProduct(id);\n\n    dispatch({\n      type: cartConstants.ADD_TO_CART_ITEM,\n      payload: payLoadForCartItem(data, qty),\n    });\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (err) {\n    dispatch({\n      type: cartConstants.ADD_TO_CART_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const payLoadForCartItem = (data, qty) => {\n  return {\n    productId: data._id,\n    productName: data.name,\n    productImage: data.productImage,\n    price: data.price,\n    countInStock: data.countInStock,\n    qty,\n  };\n};\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: cartConstants.CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => async (dispatch) => {\n  dispatch({\n    type: cartConstants.CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n  dispatch({\n    type: cartConstants.CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card } from 'react-bootstrap';\nimport * as productAction from '../actions/productAction';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport ProductReview from '../components/productReview/ProductReview';\nimport Rating from '../components/Rating/Rating';\nimport { Select, Button, FormControl, makeStyles, MenuItem } from '@material-ui/core/';\nimport * as productConstants from '../constants/productConstants';\nimport SinglePageLoader from '../components/Loader/SinglePageLoader';\nimport { addToCart } from '../actions/cartAction';\nimport * as routes from '../constants/routes';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 85,\n    top: -17,\n    left: 6,\n    position: 'absolute',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ProductDetails = ({ match, history }) => {\n  const [qty, setQty] = useState(1);\n\n  const productData = useSelector((state) => state.Product);\n  const reviewResponses = useSelector((state) => state.createReview);\n\n  const { error: createReviewError } = reviewResponses;\n\n  const { loading, product, error } = productData;\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(productAction.product(match.params.productId));\n    // eslint-disable-next-line\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    dispatch(addToCart(match.params.productId, qty));\n    history.push(routes.CART);\n  };\n\n  return (\n    <>\n      {createReviewError && (\n        <ErrorMessage header=\"Opps!!!\" message={createReviewError} reset={productConstants.CREATE_REVIEW_RESET} />\n      )}\n      <Link className=\"btn btn-light my-3\" to={routes.HOME}>\n        Go Back\n      </Link>\n      {loading ? (\n        <SinglePageLoader />\n      ) : error ? (\n        <ErrorMessage header=\"Something went wrong\" message={error} />\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image src={product.productImage} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.averageRating}\n                    text={`${product.Reviews ? product.Reviews.length : 0} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: NGN{product.price}</ListGroup.Item>\n                <ListGroup.Item>Description: {product.description}</ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>NGN{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>{product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <FormControl className={classes.formControl}>\n                            <Select\n                              labelId=\"demo-simple-select-label\"\n                              id=\"demo-simple-select\"\n                              onChange={(e) => setQty(e.target.value)}\n                              label=\"Qty\"\n                              value={qty}\n                            >\n                              {[...Array(product.countInStock).keys()].map((x) => (\n                                <MenuItem key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </MenuItem>\n                              ))}\n                            </Select>\n                          </FormControl>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={addToCartHandler}\n                      fullWidth\n                      disabled={!product.countInStock}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <ProductReview productId={match.params.productId} />\n        </>\n      )}\n    </>\n  );\n};\nexport default ProductDetails;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","export const mainHeader = (userInfo) => {\n  return {\n    table: {\n      widths: ['auto', '*'],\n\n      body: [\n        [\n          {\n            text: 'MAMAIFY\\'S\\' SHOP',\n            style: 'mainheader',\n            bold: true,\n            marginTop: 10,\n          },\n\n          {\n            width: '*',\n            style: 'info',\n            marginBottom: 30,\n            stack: [\n              {\n                style: 'h2',\n                text: `Name: ${userInfo.name}`,\n              },\n              {\n                style: 'h2',\n                text: `Email: ${userInfo.email}`,\n              },\n            ],\n          },\n        ],\n      ],\n    },\n    layout: {\n      hLineWidth: function (line) {\n        return line === 1;\n      },\n      vLineWidth: function () {\n        return 0;\n      },\n      paddingBottom: function () {\n        return 5;\n      },\n    },\n  };\n};\n\nexport const bodyForOrders = (orders) => {\n  return {\n    headerRows: 1,\n    body: [\n      [\n        {\n          text: 'S.No',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'ID',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'USER',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'DATE',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'TOTAL PRICE',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'PAID',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'DELIVERED',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n      ],\n\n      ...orders.map((o, i) => [\n        i + 1,\n        o._id,\n        o.userId && o.userId.name,\n        o.createdAt.substring(0, 10),\n        o.totalPrice,\n        o.isPaid ? o.paidAt.substring(0, 10) : 'Not paid',\n        o.isDelivered ? o.deliveredAt.substring(0, 10) : 'Not paid',\n      ]),\n    ],\n  };\n};\n\nexport const bodyForUsers = (users) => {\n  return {\n    headerRows: 1,\n    body: [\n      [\n        {\n          text: 'S.No',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'ID',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'NAME',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'EMAIL',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'VERIFIED',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'ROLE',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n        {\n          text: 'DATE',\n          bold: true,\n          fillColor: '#2B2B52',\n          color: 'white',\n        },\n      ],\n\n      ...users.map((u, i) => [\n        i + 1,\n        u._id,\n        u.name,\n        u.email,\n        u.verify ? 'Verified' : 'Not paid',\n        u.role,\n        u.createdAt.substring(0, 10),\n      ]),\n    ],\n  };\n};\n\nexport const tableStyles = () => {\n  return {\n    header: {\n      fontSize: 12,\n      marginBottom: 20,\n      marginTop: 20,\n      bold: true,\n    },\n    mainheader: {\n      fontSize: 15,\n    },\n\n    info: {\n      marginLeft: 315,\n    },\n\n    h2: {\n      marginTop: 5,\n      fontSize: 7,\n    },\n  };\n};\n","import { mainHeader, bodyForUsers, tableStyles } from '../components/table/tableLayout';\nimport config from '../config';\nimport http from '../utils/http';\nimport { interpolate } from '../utils/string';\n\n/**\n *\n * @returns {Object} data\n */\nexport const fetchUsers = async () => {\n  const { data } = await http.get(config.apiEndPoint.user.fetchUsers, {\n    accessToken: true,\n  });\n  return data.data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const fetchUser = async (id) => {\n  const url = interpolate(config.apiEndPoint.user.fetchUser, { id: id });\n\n  const { data } = await http.get(url, {\n    accessToken: true,\n  });\n\n  return data.data;\n};\n\n/**\n *\n * @param {String} body\n * @returns {Object} data\n */\n\nexport const forgotPassword = async (body) => {\n  const { data } = await http.post(config.apiEndPoint.user.forgotPassword, {\n    body,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {String} body\n * @returns {Object} data\n */\n\nexport const resetPassword = async (body) => {\n  const { data } = await http.post(config.apiEndPoint.user.resetPassword, {\n    body,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Object} body\n * @returns {Object} data\n */\nexport const login = async (body) => {\n  const { data } = await http.post(config.apiEndPoint.user.login, {\n    body,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Object} body\n * @returns {Object} data\n */\nexport const registerUser = async (body) => {\n  const { data } = await http.post(config.apiEndPoint.user.create, {\n    body,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {String} body\n * @returns {Object} data\n */\nexport const verifyEmail = async (body) => {\n  const { data } = await http.post(config.apiEndPoint.user.verifyEmail, {\n    body,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const deleteUser = async (id) => {\n  const url = interpolate(config.apiEndPoint.user.deleteUser, {\n    id: id,\n  });\n  const { data } = await http.remove(url, {\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @param {Object} body\n * @returns {Object} data\n */\nexport const updateUser = async (id, body) => {\n  const url = interpolate(config.apiEndPoint.user.updateUser, {\n    id: id,\n  });\n  const { data } = await http.put(url, {\n    body,\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n * Create PDF UI\n * @param {Object} userInfo\n * @param {Array} users\n * @returns {Object}\n */\nexport const createPdfData = (userInfo, users) => {\n  return {\n    content: [\n      //Header\n      {\n        ...mainHeader(userInfo),\n      },\n\n      {\n        style: 'header',\n        table: {\n          widths: '*',\n          body: [\n            [\n              {\n                border: ['#5bc0de', false, false, false],\n                text: 'Users List',\n              },\n            ],\n          ],\n        },\n      },\n\n      users.length > 0\n        ? {\n            layout: {\n              hLineWidth: function () {\n                return 0;\n              },\n              vLineWidth: function () {\n                return 0;\n              },\n              paddingBottom: function () {\n                return 5;\n              },\n            },\n            table: {\n              ...bodyForUsers(users),\n            },\n\n            fontSize: 8,\n            alignment: 'center',\n          }\n        : null,\n    ],\n    styles: {\n      ...tableStyles(),\n    },\n  };\n};\n","import * as userServices from '../services/user';\nimport { handleError } from '../utils/error';\nimport * as userConstants from '../constants/userConstants';\nimport * as tokenService from '../services/token';\n\nexport const auth = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.USER_AUTH_START });\n\n    const body = {\n      email,\n      password,\n    };\n\n    const { authData, token } = await userServices.login(body);\n\n    const userInfo = {\n      ...authData,\n      token,\n    };\n\n    tokenService.setToken(userInfo);\n    dispatch({\n      type: userConstants.USER_AUTH_SUCCESS,\n      payload: userInfo,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.USER_AUTH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const Logout = () => (dispatch) => {\n  tokenService.removeToken();\n  dispatch({ type: userConstants.RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.USER_REGISTER_START });\n\n    const body = {\n      name,\n      email,\n      password,\n    };\n    const { message } = await userServices.registerUser(body);\n\n    dispatch({\n      type: userConstants.USER_REGISTER_SUCCESS,\n      payload: message,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.USER_REGISTER_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const emailVerification = (verificationCode) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.USER_AUTH_START });\n\n    const code = {\n      verificationCode,\n    };\n\n    const { authData, token } = await userServices.verifyEmail(code);\n\n    const userInfo = {\n      ...authData,\n      token,\n    };\n   \n    tokenService.setToken(userInfo);\n    \n    dispatch({\n      type: userConstants.USER_AUTH_SUCCESS,\n      payload: userInfo,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.USER_AUTH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const userList = (initialLoading) => async (dispatch) => {\n  try {\n    if (initialLoading) {\n      dispatch({ type: userConstants.USERLIST_FETCH_START });\n    }\n\n    const { results, count } = await userServices.fetchUsers();\n\n    dispatch({\n      type: userConstants.USERLIST_FETCH_SUCCESS,\n      payload: {\n        results,\n        count,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.USERLIST_FETCH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const userDelete = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.USER_DELETE_START });\n\n    await userServices.deleteUser(id);\n\n    dispatch({\n      type: userConstants.USER_DELETE_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.USER_DELETE_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const updateUser = (id, updatedData) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.USER_EDIT_START });\n\n    await userServices.updateUser(id, updatedData);\n\n    dispatch({\n      type: userConstants.USER_EDIT_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.USER_EDIT_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const getUser = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.USER_FETCH_START });\n\n    const data = await userServices.fetchUser(id);\n\n    dispatch({\n      type: userConstants.USER_FETCH_SUCCESS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.USER_FETCH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const forgotPassword = (email) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.FORGOT_PASSWORD_SEND_START });\n\n    const { message } = await userServices.forgotPassword(email);\n\n    dispatch({\n      type: userConstants.FORGOT_PASSWORD_SEND_SUCCESS,\n      payload: message,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.FORGOT_PASSWORD_SEND_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const resetPassword = (resetPasswordData) => async (dispatch) => {\n  try {\n    dispatch({ type: userConstants.RESET_PASSWORD_START });\n\n    const { message } = await userServices.resetPassword(resetPasswordData);\n\n    dispatch({\n      type: userConstants.RESET_PASSWORD_SUCCESS,\n      payload: message,\n    });\n  } catch (err) {\n    dispatch({\n      type: userConstants.RESET_PASSWORD_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\nimport * as routes from '../constants/routes';\nimport * as userAction from '../actions/userAction';\nimport * as userConstants from '../constants/userConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst Login = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const classes = useStyles();\n\n  const userAuthData = useSelector((state) => state.userLogin);\n\n  const { userInfo, error, loading } = userAuthData;\n\n  const redirect = location.search ? location.search.split('=')[1] : routes.HOME;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [dispatch, userInfo, redirect, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(userAction.auth(email, password));\n  };\n\n  const redirectUserToRegisterRoute = redirect ? routes.REGISTER + `?redirect=${redirect}` : routes.REGISTER;\n\n  return (\n    <>\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.RESET} />}\n      <FormContainer>\n        <h1>Sign In</h1>\n\n        <Form onSubmit={submitHandler}>\n          <TextField\n            variant=\"outlined\"\n            type=\"email\"\n            margin=\"normal\"\n            placeholder=\"idameni89@gmail.com\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            type=\"password\"\n            placeholder=\"***********\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            value={password}\n            autoComplete=\"current-password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth disabled={loading}>\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Sign In</>}\n          </Button>\n        </Form>\n\n        <Row className=\"py-3\">\n          <Col>\n            New Customer?\n            <Link to={redirectUserToRegisterRoute}>Register</Link>\n          </Col>\n          <Col className=\"text-right\">\n            <Link to={routes.FORGOT_PASSWORD}>Forgot Password</Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { addToCart, removeItemFromCart } from '../actions/cartAction';\nimport { Select, Button, FormControl, makeStyles, MenuItem } from '@material-ui/core/';\nimport { interpolate } from '../utils/string';\nimport * as routes from '../constants/routes';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Cart = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeItemFromCart(id));\n  };\n\n  const handleCheckout = () => {\n    history.push({\n      pathname: routes.LOGIN,\n      search: `?redirect=${routes.SHIPPING}`,\n    });\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {!cartItems.length ? (\n          <>\n            Your cart is empty <Link to={routes.HOME}>Go Back</Link>\n          </>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.productId}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.productImage} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link\n                      to={interpolate(routes.PRODUCT, {\n                        productId: item.productId,\n                      })}\n                    >\n                      {item.productName}\n                    </Link>\n                  </Col>\n                  <Col md={2}>NGN{item.price}</Col>\n                  <Col md={2}>\n                    <FormControl className={classes.formControl}>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        label=\"Qty\"\n                        value={item.qty}\n                        onChange={(e) => dispatch(addToCart(item.productId, Number(e.target.value)))}\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <MenuItem key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Col>\n                  <Col md={2}>\n                    <Button type=\"button\" variant=\"light\" onClick={() => removeFromCartHandler(item.productId)}>\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>NGN\n              {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleCheckout}\n                fullWidth\n                disabled={!cartItems.length}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Cart;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoutes = ({ component: Component, ...rest }) => {\n  const userAuthData = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userAuthData;\n\n  return <Route {...rest} render={(props) => (!userInfo ? <Redirect to=\"/login\" /> : <Component {...props} />)} />;\n};\n\nexport default PrivateRoutes;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n  const userAuthData = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userAuthData;\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !userInfo ? (\n          <Redirect to=\"/login\" />\n        ) : userInfo.role !== 'admin' ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default AdminRoute;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport * as routes from '../../constants/routes';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst CheckoutSteps = ({ step1, step2, step3 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to={routes.SHIPPING}>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to={routes.PAYMENT}>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to={routes.PLACE_ORDER}>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport CheckoutSteps from '../components/CheckoutStep/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartAction';\nimport * as routes from '../constants/routes';\nimport { TextField, Button } from '@material-ui/core/';\n\nconst Shipping = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress, cartItems } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  if (!cartItems.length) {\n    history.push({\n      pathname: routes.HOME,\n    });\n  }\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push({\n      pathname: routes.PAYMENT,\n    });\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <TextField\n          variant=\"outlined\"\n          type=\"text\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"address\"\n          label=\"Enter Address\"\n          name=\"address\"\n          autoComplete=\"address\"\n          autoFocus\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          type=\"text\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"city\"\n          label=\"Enter City\"\n          name=\"city\"\n          autoComplete=\"city\"\n          autoFocus\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          type=\"text\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"postal code\"\n          label=\"Enter postal code\"\n          name=\"postal code\"\n          autoComplete=\"postal code\"\n          autoFocus\n          value={postalCode}\n          onChange={(e) => setPostalCode(e.target.value)}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          type=\"text\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"country\"\n          label=\"Enter country\"\n          name=\"country\"\n          autoComplete=\"country\"\n          autoFocus\n          value={country}\n          onChange={(e) => setCountry(e.target.value)}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default Shipping;\n","import React, { useState } from 'react';\nimport { Col, Form, Row } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport CheckoutSteps from '../components/CheckoutStep/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartAction';\nimport * as routes from '../constants/routes';\nimport { Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core/';\n\nconst PaymentMethod = ({ history }) => {\n  if (!localStorage.getItem('shippingAddress')) {\n    history.push({\n      pathname: routes.SHIPPING,\n    });\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (paymentMethod === '') {\n      return;\n    }\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push({\n      pathname: routes.PLACE_ORDER,\n    });\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Select Method</FormLabel>\n          <Row>\n            <Col md=\"8\">\n              <RadioGroup\n                aria-label=\"paymemtMethod\"\n                name=\"paymemtMethod\"\n                value={paymentMethod}\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              >\n                <FormControlLabel value=\"PayPal\" control={<Radio color=\"primary\" />} label=\"PayStack or Credit Card\" />\n              </RadioGroup>\n            </Col>\n            {/* <Col md=\"4\">\n              <RadioGroup\n                aria-label=\"paymemtMethod\"\n                name=\"paymemtMethod\"\n                value={paymentMethod}\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              >\n                <FormControlLabel value=\"esewa\" control={<Radio color=\"primary\" />} label=\"Esewa\" />\n              </RadioGroup>\n            </Col> */}\n          </Row>\n        </FormControl>\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentMethod;\n","import { mainHeader, bodyForOrders, tableStyles } from '../components/table/tableLayout';\nimport config from '../config';\nimport http from '../utils/http';\nimport { interpolate } from '../utils/string';\n\n/**\n *\n * @param {Object} body\n * @returns {Object} data\n */\nexport const createOrder = async (body) => {\n  const { data } = await http.post(config.apiEndPoint.order.createOrder, {\n    body,\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const order = async (id) => {\n  const url = interpolate(config.apiEndPoint.order.order, {\n    id: id,\n  });\n  const { data } = await http.get(url, {\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @param {Object} body\n * @returns {Object} data\n */\nexport const pay = async (id, body) => {\n  const url = interpolate(config.apiEndPoint.order.pay, {\n    id: id,\n  });\n  const { data } = await http.post(url, {\n    body,\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @param {Integer} id\n * @returns {Object} data\n */\nexport const deliverOrder = async (id) => {\n  const url = interpolate(config.apiEndPoint.order.deliverOrder, {\n    id: id,\n  });\n  const { data } = await http.post(url, {\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @returns {Array} data\n */\nexport const userOrder = async () => {\n  const { data } = await http.get(config.apiEndPoint.order.userOrder, {\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n *\n * @returns {Array}\n */\nexport const orders = async () => {\n  const { data } = await http.get(config.apiEndPoint.order.orders, {\n    accessToken: true,\n  });\n\n  return data;\n};\n\n/**\n * Create PDF UI\n * @param {Object} userInfo\n * @param {Array} orders\n * @returns {Object}\n */\nexport const createPdfData = (userInfo, orders) => {\n  return {\n    content: [\n      //Header\n      {\n        ...mainHeader(userInfo),\n      },\n\n      {\n        style: 'header',\n        table: {\n          widths: '*',\n          body: [\n            [\n              {\n                border: ['#5bc0de', false, false, false],\n                text: 'Orders List',\n              },\n            ],\n          ],\n        },\n      },\n\n      orders.length > 0\n        ? {\n            layout: {\n              hLineWidth: function () {\n                return 0;\n              },\n              vLineWidth: function () {\n                return 0;\n              },\n              paddingBottom: function () {\n                return 5;\n              },\n            },\n            table: {\n              ...bodyForOrders(orders),\n            },\n\n            fontSize: 9,\n            alignment: 'center',\n          }\n        : null,\n    ],\n    styles: {\n      ...tableStyles(),\n    },\n  };\n};\n","import * as orderServices from '../services/order';\nimport { handleError } from '../utils/error';\nimport * as orderConstants from '../constants/orderConstants';\nimport * as cartConstants from '../constants/cartConstants';\n\nexport const createOrder = (orderData) => async (dispatch) => {\n  try {\n    dispatch({ type: orderConstants.CREATE_ORDER_START });\n\n    const { data } = await orderServices.createOrder(orderData);\n\n    dispatch({\n      type: orderConstants.CREATE_ORDER_SUCCESS,\n      payload: data,\n    });\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    localStorage.removeItem('paymentMethod');\n    dispatch({\n      type: cartConstants.CART_RESET,\n    });\n  } catch (err) {\n    dispatch({\n      type: orderConstants.CREATE_ORDER_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const getOrder = (orderId, initialLoading) => async (dispatch) => {\n  try {\n    if (initialLoading) {\n      dispatch({ type: orderConstants.GET_ORDER_START });\n    }\n\n    const { data } = await orderServices.order(orderId);\n\n    dispatch({\n      type: orderConstants.GET_ORDER_SUCCESS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: orderConstants.GET_ORDER_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch) => {\n  try {\n    dispatch({\n      type: orderConstants.ORDER_PAY_START,\n    });\n\n    const { message } = await orderServices.pay(orderId, paymentResult);\n\n    dispatch({\n      type: orderConstants.ORDER_PAY_SUCCESS,\n      payload: message,\n    });\n  } catch (err) {\n    dispatch({\n      type: orderConstants.ORDER_PAY_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch) => {\n  try {\n    dispatch({\n      type: orderConstants.ORDER_DILIVERD_START,\n    });\n\n    const { data } = await orderServices.deliverOrder(orderId);\n\n    dispatch({\n      type: orderConstants.ORDER_DILIVERD_SUCCESS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: orderConstants.ORDER_DILIVERD_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const authOrder = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: orderConstants.AUTH_ORDER_FETCH_START,\n    });\n\n    const { data, count } = await orderServices.userOrder();\n\n    dispatch({\n      type: orderConstants.AUTH_ORDER_FETCH_SUCCESS,\n      payload: data,\n      total: count,\n    });\n  } catch (err) {\n    dispatch({\n      type: orderConstants.AUTH_ORDER_FETCH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: orderConstants.ORDERLIST_FETCH_START,\n    });\n\n    const { results, count } = await orderServices.orders();\n\n    dispatch({\n      type: orderConstants.ORDERLIST_FETCH_SUCCESS,\n      payload: {\n        results,\n        count,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: orderConstants.ORDERLIST_FETCH_FAIL,\n      payload: handleError(err),\n    });\n  }\n};\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst TableLoader = () => {\n  return (\n    <Table striped bordered hover responsive className=\"table-sm\">\n      <thead>\n        <tr>\n          {Array(7)\n            .fill()\n            .map((data, index) => (\n              <th key={index}>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton height={25} />\n                </SkeletonTheme>\n              </th>\n            ))}\n        </tr>\n      </thead>\n      <tbody>\n        {Array(7)\n          .fill()\n          .map((data, index) => (\n            <tr key={index}>\n              <td>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </td>\n              <td>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </td>\n              <td>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </td>\n              <td>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </td>\n              <td>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </td>\n              <td>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </td>\n              <td>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </Table>\n  );\n};\nexport default TableLoader;\n","import React from 'react';\nimport { Select, InputLabel, FormControl, makeStyles, MenuItem } from '@material-ui/core/';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Print = ({ printAs }) => {\n  const classes = useStyles();\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-outlined-label\">Print</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        onChange={(e) => printAs(e.target.value)}\n        label=\"Print As\"\n        autoWidth\n      >\n        <MenuItem value=\"pdf\"> PDF</MenuItem>\n        <MenuItem value=\"excel\">EXCEL</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default Print;\n","import React, { useEffect } from 'react';\nimport { Table, Button, Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\n//import { Button as MeterialButton } from \"@material-ui/core/\";\nimport { authOrder } from '../actions/orderAction';\nimport { interpolate } from '../utils/string';\nimport { createPdfData } from '../services/order';\nimport * as routes from '../constants/routes';\nimport TableLoader from '../components/Loader/TableLoader';\nimport Print from '../components/Print/Print';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const authOrders = useSelector((state) => state.authOrders);\n  const { orders, loading, error, count } = authOrders;\n\n  useEffect(() => {\n    dispatch(authOrder());\n    // eslint-disable-next-line\n  }, [dispatch, userInfo]);\n\n  const printAs = (value) => {\n    const downloadAs = value;\n\n    switch (downloadAs) {\n      case 'pdf':\n        var docDefinition = createPdfData(userInfo, orders);\n\n        pdfMake.createPdf(docDefinition).download('user-order.pdf');\n\n        break;\n      case 'excel':\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  console.log(orders);\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>Profile</h2>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <Row>\n                <Col>Name:</Col>\n                <Col>\n                  <strong>{userInfo.name}</strong>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Email:</Col>\n                <Col>\n                  <strong>{userInfo.email}</strong>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Account:</Col>\n                <Col>\n                  <strong>{userInfo.verify ? 'Verified' : 'Not Verified'}</strong>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            {/* <ListGroup.Item>\n              <LinkContainer to=\"/updateUserDetails\">\n                <MeterialButton\n                  type=\"button\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  disabled={true}\n                >\n                  Update\n                </MeterialButton>\n              </LinkContainer>\n            </ListGroup.Item> */}\n          </ListGroup>\n        </Card>\n      </Col>\n      <Col md={9}>\n        <div className=\"clearfix\">\n          <span className=\"float-left\">\n            <h1>My Orders ({count})</h1>\n          </span>\n\n          <span className=\"float-right\">\n            {' '}\n            <Print printAs={printAs} />\n          </span>\n        </div>\n\n        {loading ? (\n          <TableLoader />\n        ) : error ? (\n          <ErrorMessage header=\"Something went wrong\" message={error} />\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL PRICE</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer\n                      to={interpolate(routes.ORDER, {\n                        orderId: order._id,\n                      })}\n                    >\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport CheckoutSteps from '../components/CheckoutStep/CheckoutSteps';\nimport { createOrder } from '../actions/orderAction';\nimport * as routes from '../constants/routes';\nimport { interpolate } from '../utils/string';\nimport * as orderConstants from '../constants/orderConstants';\nimport { Button, CircularProgress, makeStyles } from '@material-ui/core/';\n\nconst useStyles = makeStyles((theme) => ({\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst PlaceOrder = ({ history }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const cart = useSelector((state) => state.cart);\n\n  const redirectUser = !localStorage.getItem('shippingAddress')\n    ? routes.SHIPPING\n    : !localStorage.getItem('paymentMethod')\n    ? routes.PAYMENT\n    : null;\n\n  if (redirectUser) {\n    history.push(redirectUser);\n  }\n\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  // cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 0);\n  cart.taxPrice = addDecimals(Number((0.0 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.createOrder);\n  const { order, success, error, loading } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push({\n        pathname: interpolate(routes.ORDER, { orderId: order._id }),\n      });\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shipping: cart.shippingAddress,\n        payment: {\n          paymentMethod: cart.paymentMethod,\n        },\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      {error && <ErrorMessage header=\"Create Order Error\" message={error} reset={orderConstants.CREATE_ORDER_RESET} />}\n      <CheckoutSteps step1 step2 step3 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {!cart.cartItems.length ? (\n                <>Your cart is empty</>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image src={item.productImage} alt={item.productName} fluid rounded />\n                        </Col>\n                        <Col>\n                          <Link\n                            to={interpolate(routes.PRODUCT, {\n                              productId: item.productId,\n                            })}\n                          >\n                            {item.productName}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x NGN{item.price} = NGN{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>NGN{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>NGN{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>NGN{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>NGN{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  disabled={!cart.cartItems || loading}\n                  onClick={placeOrderHandler}\n                >\n                  {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Place Order</>}\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrder;\n","import React, { useEffect, useState } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport { listOrders } from '../actions/orderAction';\nimport TableLoader from '../components/Loader/TableLoader';\nimport Print from '../components/Print/Print';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport * as routes from '../constants/routes';\nimport { createPdfData } from '../services/order';\nimport { interpolate } from '../utils/string';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst OrderList = () => {\n  const orderList = useSelector((state) => state.orderList);\n  const userLogin = useSelector((state) => state.userLogin);\n  const [initialLoading, setInitialLoading] = useState(true);\n\n  const { orders, loading, error, count, success } = orderList;\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listOrders());\n\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (success && initialLoading) {\n      setInitialLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [dispatch, success]);\n\n  const printAs = (value) => {\n    const downloadAs = value;\n\n    switch (downloadAs) {\n      case 'pdf':\n        var docDefinition = createPdfData(userInfo, orders);\n\n        pdfMake.createPdf(docDefinition).download('orders-list.pdf');\n\n        break;\n      case 'excel':\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"clearfix\">\n        <span className=\"float-left\">\n          <h1>Orders ({count})</h1>\n        </span>\n\n        <span className=\"float-right\">\n          {' '}\n          <Print printAs={printAs} />\n        </span>\n      </div>\n\n      {loading ? (\n        <TableLoader />\n      ) : error ? (\n        <ErrorMessage header=\"Something went wrong\" message={error} />\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.userId && order.userId.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>NGN{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer\n                    to={interpolate(routes.ORDER, {\n                      orderId: order._id,\n                    })}\n                  >\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderList;\n","import React, { useState } from 'react';\nimport { Toast } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport 'animate.css';\n\nconst SuccessMessage = ({ header, message, reset }) => {\n  const [show, setShow] = useState(true);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div style={{ position: 'fixed', right: '0', zIndex: '20180210' }}>\n        <Toast\n          onClose={() => {\n            setShow(false);\n            dispatch({ type: reset });\n          }}\n          show={show}\n          delay={3000}\n          autohide\n          className=\"animate__animated animate__shakeX\"\n        >\n          <Toast.Header\n            style={{\n              background: '#43BE31',\n              color: 'white',\n              fontWeight: 'bold',\n            }}\n          >\n            <strong className=\"mr-auto\">{header}</strong>\n          </Toast.Header>\n          <Toast.Body>{message}</Toast.Body>\n        </Toast>\n      </div>\n    </>\n  );\n};\n\nexport default SuccessMessage;\n","import React, { useEffect, useState } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col, Modal, Form, Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport SuccessMessage from '../components/Message/successMessage';\nimport TableLoader from '../components/Loader/TableLoader';\nimport {\n  Button as MaterialButton,\n  TextField,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core/';\nimport { productListForAdmin, deleteProduct, createProduct } from '../actions/productAction';\nimport * as routes from '../constants/routes';\nimport { interpolate } from '../utils/string';\nimport * as productConstants from '../constants/productConstants';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 330,\n    top: 6,\n    left: -4,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst ProductList = () => {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, products, count, error, success } = productList;\n\n  const deleteProductData = useSelector((state) => state.deleteProduct);\n  const { success: deleteSuccess, error: deleteFail } = deleteProductData;\n\n  const createProductDetails = useSelector((state) => state.createProductDetails);\n  const { success: createSuccess, error: createFail, loading: createLoading } = createProductDetails;\n\n  const classes = useStyles();\n\n  const [name, setName] = useState('');\n  const [productImage, setProductImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [price, setPrice] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [openForm, setOpenForm] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n\n  useEffect(() => {\n    if (createSuccess) {\n      setOpenForm(false);\n      setName('');\n      setProductImage('');\n      setBrand('');\n      setPrice('');\n      setCategory('');\n      setCountInStock('');\n      setDescription('');\n\n      dispatch({ type: productConstants.CREATE_PRODUCT_RESET });\n    }\n\n    dispatch(productListForAdmin(initialLoading));\n\n    // eslint-disable-next-line\n  }, [dispatch, deleteSuccess, createSuccess]);\n\n  useEffect(() => {\n    if (success && initialLoading) {\n      setInitialLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [dispatch, success]);\n\n  const cancelCreateProduct = () => {\n    setOpenForm(false);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (\n      name === '' ||\n      category === '' ||\n      productImage === '' ||\n      description === '' ||\n      brand === '' ||\n      price === '' ||\n      countInStock === ''\n    ) {\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append('name', name);\n    formData.append('productImage', productImage);\n    formData.append('brand', brand);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('countInStock', countInStock);\n    formData.append('description', description);\n    dispatch(createProduct(formData));\n  };\n\n  const openNewProductForm = () => {\n    if (openForm) {\n      return (\n        <>\n          <Modal show={openForm} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n            <Modal.Header>\n              <Modal.Title id=\"contained-modal-title-vcenter\">Add Product</Modal.Title>\n            </Modal.Header>\n            {createFail && (\n              <ErrorMessage\n                header=\"Something went wrong\"\n                message={createFail}\n                reset={productConstants.CREATE_PRODUCT_RESET}\n              />\n            )}\n            <Form onSubmit={submitHandler}>\n              <Modal.Body className=\"show-grid\">\n                <Container>\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        type=\"text\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        type=\"text\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"brand\"\n                        label=\"Brand\"\n                        name=\"brand\"\n                        autoComplete=\"brand\"\n                        autoFocus\n                        value={brand}\n                        onChange={(e) => setBrand(e.target.value)}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        type=\"number\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"Price\"\n                        name=\"price\"\n                        autoComplete=\"price\"\n                        autoFocus\n                        value={price}\n                        onChange={(e) => setPrice(Number(e.target.value))}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        type=\"number\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"countInStock\"\n                        label=\"CountInStock\"\n                        name=\"countInStock\"\n                        autoComplete=\"countInStock\"\n                        autoFocus\n                        value={countInStock}\n                        onChange={(e) => setCountInStock(Number(e.target.value))}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col xs={12} md={6}>\n                      <TextField\n                        variant=\"outlined\"\n                        type=\"file\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"file\"\n                        name=\"file\"\n                        autoComplete=\"file\"\n                        autoFocus\n                        onChange={(e) => setProductImage(e.target.files[0])}\n                      />\n                    </Col>\n                    <Col xs={12} md={6}>\n                      <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n                        <Select\n                          labelId=\"demo-simple-select-outlined-label\"\n                          id=\"demo-simple-select-outlined\"\n                          onChange={(e) => setCategory(e.target.value)}\n                          label=\"Category\"\n                          value={category}\n                        >\n                          <MenuItem value=\"Vegetable\">Fresh Vegetables</MenuItem>\n                          <MenuItem value=\"Foodstuffs\">Food Stuffs</MenuItem>\n                          <MenuItem value=\"Provision\">Provisions</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} md={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        type=\"text\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"Description\"\n                        name=\"description\"\n                        autoComplete=\"description\"\n                        autoFocus\n                        value={description}\n                        multiline\n                        rows={5}\n                        onChange={(e) => setDescription(e.target.value)}\n                      />\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n              <Modal.Footer>\n                <MaterialButton\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"mr-2\"\n                  disabled={createLoading}\n                >\n                  {createLoading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Submit</>}\n                </MaterialButton>{' '}\n                <MaterialButton variant=\"contained\" color=\"primary\" onClick={cancelCreateProduct}>\n                  Close\n                </MaterialButton>\n              </Modal.Footer>\n            </Form>\n          </Modal>\n        </>\n      );\n    }\n  };\n\n  const deleteHandler = (id, e) => {\n    e.preventDefault();\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className=\"custom-ui\">\n            <h1 className=\"font-weight-bold text-white\">Are you sure?</h1>\n            <p>You want to delete this product?</p>\n            <MaterialButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                dispatch(deleteProduct(id));\n                onClose();\n              }}\n            >\n              Yes, Delete it !\n            </MaterialButton>\n            <MaterialButton variant=\"contained\" color=\"primary\" onClick={onClose}>\n              No\n            </MaterialButton>\n          </div>\n        );\n      },\n    });\n  };\n\n  return (\n    <>\n      {deleteSuccess && (\n        <SuccessMessage\n          header=\"Done\"\n          message=\"Product Deleted Successfully\"\n          reset={productConstants.DELETE_PRODUCT_RESET}\n        />\n      )}\n      {deleteFail && (\n        <ErrorMessage\n          header=\"Something went wrong\"\n          message={deleteFail}\n          reset={productConstants.DELETE_PRODUCT_RESET}\n        />\n      )}\n      <Row>\n        <Col>\n          <h1>Products({count})</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <MaterialButton variant=\"contained\" color=\"primary\" onClick={() => setOpenForm(true)}>\n            <i className=\"fas fa-plus mr-2\"></i> Add Product\n          </MaterialButton>\n        </Col>\n      </Row>\n      {loading ? (\n        <TableLoader />\n      ) : error ? (\n        <ErrorMessage header=\"Something went wrong\" message={error} />\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>NGN{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer\n                      to={interpolate(routes.PRODUCT_EDIT, {\n                        productId: product._id,\n                      })}\n                    >\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button variant=\"danger\" className=\"btn-sm\" onClick={(e) => deleteHandler(product._id, e)}>\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      )}\n      {openNewProductForm()}\n    </>\n  );\n};\n\nexport default ProductList;\n","import React, { useEffect, useState } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport SuccessMessage from '../components/Message/successMessage';\nimport { userList, userDelete } from '../actions/userAction';\nimport * as userConstants from '../constants/userConstants';\nimport { Button as MaterialButton } from '@material-ui/core/';\nimport TableLoader from '../components/Loader/TableLoader';\nimport { createPdfData } from '../services/user';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Print from '../components/Print/Print';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst UserList = () => {\n  const dispatch = useDispatch();\n\n  const [initialLoading, setInitialLoading] = useState(true);\n  const userListDetails = useSelector((state) => state.userList);\n  const { loading, users, count, error, success } = userListDetails;\n\n  const userDeleteDetails = useSelector((state) => state.userDeleteDetails);\n  const { success: deleteSuccess, error: deleteFail } = userDeleteDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch(userList(initialLoading));\n\n    // eslint-disable-next-line\n  }, [dispatch, deleteSuccess]);\n\n  useEffect(() => {\n    if (success && initialLoading) {\n      setInitialLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [dispatch, success]);\n\n  const deleteHandler = (id, e) => {\n    e.preventDefault();\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className=\"custom-ui\">\n            <h1 className=\"font-weight-bold text-white\">Are you sure?</h1>\n            <p>You want to delete this user?</p>\n            <MaterialButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                dispatch(userDelete(id));\n                onClose();\n              }}\n            >\n              Yes, Delete it !\n            </MaterialButton>\n            <MaterialButton variant=\"contained\" color=\"primary\" onClick={onClose}>\n              No\n            </MaterialButton>\n          </div>\n        );\n      },\n    });\n  };\n\n  const printAs = (value) => {\n    const downloadAs = value;\n\n    switch (downloadAs) {\n      case 'pdf':\n        var docDefinition = createPdfData(userInfo, users);\n\n        pdfMake.createPdf(docDefinition).download('users-list.pdf');\n\n        break;\n      case 'excel':\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      {deleteSuccess && (\n        <SuccessMessage header=\"Done\" message=\"User Deleted Successfully\" reset={userConstants.USER_DELETE_RESET} />\n      )}\n      {deleteFail && (\n        <ErrorMessage header=\"Something went wrong\" message={deleteFail} reset={userConstants.USER_DELETE_RESET} />\n      )}\n      <div className=\"clearfix\">\n        <span className=\"float-left\">\n          <h1>Users ({count})</h1>\n        </span>\n\n        <span className=\"float-right\">\n          {' '}\n          <Print printAs={printAs} />\n        </span>\n      </div>\n\n      {loading ? (\n        <TableLoader />\n      ) : error ? (\n        <ErrorMessage header=\"Something went wrong\" message={error} />\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>EMAIL</th>\n                <th>VERIFIED</th>\n                <th>ROLE</th>\n                <th>DATE</th>\n                <th>ACTION</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user) => (\n                <tr key={user._id}>\n                  <td>{user._id}</td>\n                  <td>{user.name}</td>\n                  <td>\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\n                  </td>\n                  <td>\n                    {user.verify ? (\n                      <i className=\"fas fa-check\" style={{ color: '#43BE31' }}></i>\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>{user.role}</td>\n                  <td>{user.createdAt.substring(0, 10)}</td>\n\n                  <td>\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button variant=\"danger\" className=\"btn-sm\" onClick={(e) => deleteHandler(user._id, e)}>\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default UserList;\n","import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport * as userAction from '../actions/userAction';\nimport * as userConstants from '../constants/userConstants';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport {\n  TextField,\n  Button,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core/';\nimport { Link, Redirect } from 'react-router-dom';\nimport confirmationImg from '../assests/confirmation.png';\nimport { confirmAlert } from 'react-confirm-alert';\nimport * as routes from '../constants/routes';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst UpdateUser = ({ match }) => {\n  const userId = match.params.userId;\n  const userUpdateDetails = useSelector((state) => state.userUpdateDetails);\n  const { loading: updateLoading, error: updateError, success: updateSuccess } = userUpdateDetails;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, user, error, success } = userDetails;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [Success, setSuccess] = useState(false);\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userAction.getUser(userId));\n\n    // eslint-disable-next-line\n  }, [dispatch, userId]);\n\n  useEffect(() => {\n    if (success) {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n\n    // eslint-disable-next-line\n  }, [dispatch, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const UpdateData = {\n      name,\n      email,\n      role,\n    };\n    dispatch(userAction.updateUser(userId, UpdateData));\n  };\n\n  const ConfirmedAlert = () => {\n    if (updateSuccess) {\n      return confirmAlert({\n        customUI: ({ onClose }) => {\n          return (\n            <div className=\"custom-ui-alert\">\n              <div className=\"success-img\">\n                <img src={confirmationImg} alt=\"confirmationImg\" />\n              </div>\n              <h3 className=\"font-weight-bold text\">User updated successfully</h3>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  onClose();\n                  dispatch({ type: userConstants.USER_EDIT_RESET });\n                  setSuccess(true);\n                }}\n              >\n                OK\n              </Button>\n            </div>\n          );\n        },\n      });\n    }\n  };\n\n  return (\n    <>\n      {Success && <Redirect to={routes.USERS} />}\n      {updateError && (\n        <ErrorMessage header=\"Something went wrong\" message={updateError} reset={userConstants.USER_EDIT_RESET} />\n      )}\n      <Link to={routes.USERS} className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <h4>Loading...</h4>\n      ) : error ? (\n        <ErrorMessage header=\"Something went wrong\" message={error} />\n      ) : (\n        <>\n          <FormContainer>\n            <h1>Edit User</h1>\n            <Form onSubmit={submitHandler}>\n              <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                autoFocus\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                type=\"email\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"brand\"\n                autoFocus\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Role</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  onChange={(e) => setRole(e.target.value)}\n                  label=\"Role\"\n                  value={role}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value=\"user\">User</MenuItem>\n                  <MenuItem value=\"admin\">Admin</MenuItem>\n                </Select>\n              </FormControl>\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                disabled={updateLoading}\n                className={classes.prgressColor}\n              >\n                {updateLoading ? <CircularProgress color=\"inherit\" /> : <>Update</>}\n              </Button>\n            </Form>\n          </FormContainer>\n          {ConfirmedAlert()}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default UpdateUser;\n","import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport * as productAction from '../actions/productAction';\nimport * as productConstants from '../constants/productConstants';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport {\n  TextField,\n  Button,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n} from '@material-ui/core/';\nimport { Link, Redirect } from 'react-router-dom';\nimport confirmationImg from '../assests/confirmation.png';\nimport { confirmAlert } from 'react-confirm-alert';\nimport * as routes from '../constants/routes';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst EditProduct = ({ match }) => {\n  const productId = match.params.productId;\n  const productData = useSelector((state) => state.Product);\n  const { loading, product, error, success } = productData;\n\n  const updateProductDetails = useSelector((state) => state.updateProductDetails);\n  const { loading: EditProductLoading, error: EditProductError, success: EditProductSuccess } = updateProductDetails;\n\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [price, setPrice] = useState(0);\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [Success, setSuccess] = useState(false);\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(productAction.product(productId));\n\n    // eslint-disable-next-line\n  }, [dispatch, productId]);\n\n  useEffect(() => {\n    if (success) {\n      setName(product.name);\n      setPrice(product.price);\n      setBrand(product.brand);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setDescription(product.description);\n    }\n\n    // eslint-disable-next-line\n  }, [dispatch, success]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const UpdateData = {\n      name,\n      brand,\n      price,\n      category,\n      countInStock,\n      description,\n    };\n    dispatch(productAction.EditProduct(productId, UpdateData));\n  };\n\n  const ConfirmedAlert = () => {\n    if (EditProductSuccess) {\n      return confirmAlert({\n        customUI: ({ onClose }) => {\n          return (\n            <div className=\"custom-ui-alert\">\n              <div className=\"success-img\">\n                <img src={confirmationImg} alt=\"confirmationImg\" />\n              </div>\n              <h3 className=\"font-weight-bold text\">Product updated successfully</h3>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  onClose();\n                  dispatch({ type: productConstants.EDIT_PRODUCT_RESET });\n                  setSuccess(true);\n                }}\n              >\n                OK\n              </Button>\n            </div>\n          );\n        },\n      });\n    }\n  };\n  return (\n    <>\n      {Success && <Redirect to={routes.PRODUCTS} />}\n      {EditProductError && (\n        <ErrorMessage\n          header=\"Something went wrong\"\n          message={EditProductError}\n          reset={productConstants.EDIT_PRODUCT_RESET}\n        />\n      )}\n      <Link to={routes.PRODUCTS} className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <h4>Loading...</h4>\n      ) : error ? (\n        <ErrorMessage header=\"Something went wrong\" message={error} />\n      ) : (\n        <>\n          <FormContainer>\n            <h1>Edit Product</h1>\n            <Form onSubmit={submitHandler}>\n              <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                autoFocus\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"brand\"\n                label=\"Brand\"\n                name=\"brand\"\n                autoComplete=\"brand\"\n                autoFocus\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                type=\"number\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"price\"\n                label=\"Price\"\n                name=\"price\"\n                autoComplete=\"price\"\n                autoFocus\n                value={price}\n                onChange={(e) => setPrice(Number(e.target.value))}\n              />\n              <TextField\n                variant=\"outlined\"\n                type=\"number\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"countInStock\"\n                label=\"CountInStock\"\n                name=\"countInStock\"\n                autoComplete=\"countInStock\"\n                autoFocus\n                value={countInStock}\n                onChange={(e) => setCountInStock(Number(e.target.value))}\n              />\n              <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"description\"\n                label=\"Description\"\n                name=\"description\"\n                autoComplete=\"description\"\n                autoFocus\n                value={description}\n                multiline\n                rows={5}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  onChange={(e) => setCategory(e.target.value)}\n                  label=\"Category\"\n                  value={category}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value=\"Vegetable\">Fresh Vegetables</MenuItem>\n                  <MenuItem value=\"Foodstuffs\">Food Stuffs</MenuItem>\n                  <MenuItem value=\"Provision\">Provisions</MenuItem>\n                </Select>\n              </FormControl>\n\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth disabled={EditProductLoading}>\n                {EditProductLoading ? (\n                  <CircularProgress color=\"inherit\" className={classes.prgressColor} />\n                ) : (\n                  <>Update</>\n                )}\n              </Button>\n            </Form>\n          </FormContainer>\n          {ConfirmedAlert()}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EditProduct;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: 'info',\n};\n\nexport default Message;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nconst Order = () => {\n  return (\n    <>\n      <h1>\n        {' '}\n        <SkeletonTheme color=\"lightGray\">\n          <Skeleton />\n        </SkeletonTheme>\n      </h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </h2>\n              <p>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </p>\n              <p>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </p>\n              <p>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </p>\n              <SkeletonTheme color=\"lightGray\">\n                <Skeleton height={30} />\n              </SkeletonTheme>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </h2>\n              <p>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </p>\n              <SkeletonTheme color=\"lightGray\">\n                <Skeleton height={30} />\n              </SkeletonTheme>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>\n                {' '}\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton />\n                </SkeletonTheme>\n              </h2>\n\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col md={1}>\n                      <SkeletonTheme color=\"lightGray\">\n                        <Skeleton />\n                      </SkeletonTheme>\n                    </Col>\n                    <Col>\n                      <SkeletonTheme color=\"lightGray\">\n                        <Skeleton />\n                      </SkeletonTheme>\n                    </Col>\n                    <Col md={4}>\n                      <SkeletonTheme color=\"lightGray\">\n                        <Skeleton />\n                      </SkeletonTheme>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              </ListGroup>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>\n                  <SkeletonTheme color=\"lightGray\">\n                    <Skeleton />\n                  </SkeletonTheme>\n                </h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                  <Col>\n                    <SkeletonTheme color=\"lightGray\">\n                      <Skeleton />\n                    </SkeletonTheme>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton height={30} />\n                </SkeletonTheme>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <SkeletonTheme color=\"lightGray\">\n                  <Skeleton height={30} />\n                </SkeletonTheme>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Order;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import { PayPalButton } from 'react-paypal-button-v2';\nimport { PaystackButton } from 'react-paystack';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '@material-ui/core/';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport Message from '../components/InfoMessage/Message';\nimport Loader from '../components/Loader/Loader';\nimport { getOrder, payOrder, deliverOrder } from '../actions/orderAction';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\nimport { interpolate } from '../utils/string';\nimport config from '../config';\nimport * as routes from '../constants/routes';\nimport OrderLoader from '../components/Loader/OrderLoader';\n\nconst Order = ({ match }) => {\n  const orderId = match.params.orderId;\n\n  const [sdkReady, setSdkReady] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error, success } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPayMessage } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const queryParams = new URLSearchParams(window.location.search);\n\n  const refId = queryParams.get('refId') ? queryParams.get('refId').trim() : null;\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      // script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.src = `https://js.paystack.co/v1/inline.js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (order && !order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n    // eslint-disable-next-line\n  }, [dispatch, orderId, successPayMessage, successDeliver, order]);\n\n  useEffect(() => {\n    dispatch({ type: ORDER_PAY_RESET });\n    dispatch({ type: ORDER_DELIVER_RESET });\n    dispatch(getOrder(orderId, initialLoading));\n\n    // eslint-disable-next-line\n  }, [dispatch, successPayMessage, successDeliver, refId]);\n\n  useEffect(() => {\n    if (success && initialLoading) {\n      setInitialLoading(false);\n    }\n    // eslint-disable-next-line\n  }, [dispatch, success]);\n\n  useEffect(() => {\n    if (refId) {\n      dispatch(payOrder(orderId));\n    }\n    // eslint-disable-next-line\n  }, [refId]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order._id));\n  };\n\n  const payWithEsewa = () => {\n    var resultId = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 14; i++) {\n      resultId += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    var path = config.esewaPaymentUrl;\n    var params = {\n      amt: order.itemsPrice,\n      psc: order.shippingPrice,\n      pdc: 0,\n      txAmt: order.taxPrice,\n      tAmt: order.totalPrice,\n      pid: resultId,\n      scd: 'EPAYTEST',\n      su: `http://localhost:3000/order/${orderId}`,\n      fu: `http://localhost:3000/order/${orderId}`,\n    };\n    var form = document.createElement('form');\n    form.setAttribute('method', 'POST');\n    form.setAttribute('action', path);\n\n    Object.keys(params).forEach((key) => {\n      var hiddenField = document.createElement('input');\n      hiddenField.setAttribute('type', 'hidden');\n      hiddenField.setAttribute('name', key);\n      hiddenField.setAttribute('value', params[key]);\n      form.appendChild(hiddenField);\n    });\n\n    document.body.appendChild(form);\n    form.submit();\n  };\n\n  return loading ? (\n    <OrderLoader />\n  ) : error ? (\n    <ErrorMessage header=\"Something went wrong\" message={error} />\n  ) : (\n    <>\n      {order ? (\n        <>\n          <h1>Order {order._id}</h1>\n          <Row>\n            <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    <strong>Name: </strong> {order.userId.name}\n                  </p>\n                  <p>\n                    <strong>Email: </strong> <a href={`mailto:${order.userId.email}`}>{order.userId.email}</a>\n                  </p>\n                  <p>\n                    <strong>Address:</strong> {order.shipping.address},{order.shipping.city} {order.shipping.postalCode}\n                    , {order.shipping.country}\n                  </p>\n                  {order.isDelivered ? (\n                    <Message variant=\"success\">Delivered on {order.deliveredAt}</Message>\n                  ) : (\n                    <Message variant=\"danger\">Not Delivered</Message>\n                  )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <strong>Method: </strong>\n                    {order.payment ? order.payment.paymentMethod : ''}\n                  </p>\n                  {order.isPaid ? (\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                  ) : (\n                    <Message variant=\"danger\">Not Paid</Message>\n                  )}\n                </ListGroup.Item>\n\n                {order.orderItems ? (\n                  <ListGroup.Item>\n                    <h2>Order Items</h2>\n                    {!order.orderItems.length ? (\n                      <Message>Order is empty</Message>\n                    ) : (\n                      <ListGroup variant=\"flush\">\n                        {order.orderItems.map((item, index) => (\n                          <ListGroup.Item key={index}>\n                            <Row>\n                              <Col md={1}>\n                                <Image src={item.productImage} alt={item.productName} fluid rounded />\n                              </Col>\n                              <Col>\n                                <Link\n                                  to={interpolate(routes.PRODUCT, {\n                                    productId: item.productId,\n                                  })}\n                                >\n                                  {item.productName}\n                                </Link>\n                              </Col>\n                              <Col md={4}>\n                                {item.qty} x NGN{item.price} = NGN{item.qty * item.price}\n                              </Col>\n                            </Row>\n                          </ListGroup.Item>\n                        ))}\n                      </ListGroup>\n                    )}\n                  </ListGroup.Item>\n                ) : (\n                  ''\n                )}\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>NGN{order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>NGN{order.shippingPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>NGN{order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Total</Col>\n                      <Col>NGN{order.totalPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {order.payment && order.payment.paymentMethod === 'PayPal' && !order.isPaid && (\n                    <ListGroup.Item>\n                      {loadingPay && <Loader />}\n                      {!sdkReady ? (\n                        <Loader />\n                      ) : (\n                        // <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                        <PaystackButton text={'Click to make payment'} reference ={(new Date()).getTime().toString()} email={order.userId.email} publicKey = {'pk_live_76ea25e351b689e556b34a568b0505d21dda6d9b'} amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                      )}\n                    </ListGroup.Item>\n                  )}\n                  {order.payment && order.payment.paymentMethod === 'esewa' && !order.isPaid && (\n                    <ListGroup.Item>\n                      <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={payWithEsewa}>\n                        <Image src={config.esewaImageUrl} alt=\"esewa\" fluid rounded />\n                      </Button>\n                    </ListGroup.Item>\n                  )}\n\n                  {loadingDeliver && <Loader />}\n                  {userInfo && userInfo.role === 'admin' && order.isPaid && !order.isDelivered && (\n                    <ListGroup.Item>\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={deliverHandler}>\n                        Mark As Delivered\n                      </Button>\n                    </ListGroup.Item>\n                  )}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default Order;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as routes from '../constants/routes';\nimport * as userAction from '../actions/userAction';\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userAction.Logout());\n  }, [dispatch]);\n\n  return <Redirect to={routes.HOME} />;\n};\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport SuccessMessage from '../components/Message/successMessage';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\nimport * as routes from '../constants/routes';\nimport * as userAction from '../actions/userAction';\nimport * as userConstants from '../constants/userConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  progressColor: {\n    color: '#fff',\n  },\n}));\n\nconst Register = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [verificationMessage, setVerificationMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const classes = useStyles();\n\n  const userRegisterData = useSelector((state) => state.userRegister);\n\n  const { error, loading, message, success } = userRegisterData;\n\n  const dispatch = useDispatch();\n\n  const redirect = location.search ? location.search.split('=')[1] : routes.HOME;\n\n  useEffect(() => {\n    if (success) {\n      setTimeout(() => {\n        history.push({\n          pathname: routes.EMAIL_VERIFICATION,\n          search: `?redirect=${redirect}`,\n        });\n      }, 5000);\n    }\n  }, [success, history, redirect]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setVerificationMessage('');\n    if (password !== confirmPassword) {\n      return setVerificationMessage(\"Passwords don't match\");\n    }\n    dispatch(userAction.register(name, email, password));\n  };\n\n  const redirectUserToLoginRoute = redirect ? routes.LOGIN + `?redirect=${redirect}` : routes.LOGIN;\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.USER_REGISTER_RESET} />}\n      {verificationMessage !== '' && <ErrorMessage header=\"Auth Error\" message={verificationMessage} />}\n      {success && (\n        <SuccessMessage header=\"Register SuccessFully\" message={message} reset={userConstants.USER_REGISTER_RESET} />\n      )}\n      <Form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          type=\"text\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"User Name\"\n          name=\"name\"\n          autoComplete=\"email\"\n          autoFocus\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          type=\"email\"\n          margin=\"normal\"\n          placeholder=\"idameni89@gmail.com\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          type=\"password\"\n          placeholder=\"***********\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          id=\"password\"\n          value={password}\n          autoComplete=\"current-password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          type=\"password\"\n          placeholder=\"***********\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Confirm Password\"\n          id=\"password\"\n          value={confirmPassword}\n          autoComplete=\"current-password\"\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\n          {loading ? <CircularProgress color=\"inherit\" className={classes.progressColor} /> : <>Register</>}\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account? <Link to={redirectUserToLoginRoute}>Login</Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport SuccessMessage from '../components/Message/successMessage';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\nimport * as userAction from '../actions/userAction';\nimport * as userConstants from '../constants/userConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const classes = useStyles();\n\n  const forgotPasswordDetails = useSelector((state) => state.forgotPasswordDetails);\n\n  const { loading, error, message, success } = forgotPasswordDetails;\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(userAction.forgotPassword({ email }));\n  };\n\n  return (\n    <>\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\n      {success && <SuccessMessage header=\"Done\" message={message} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\n      <FormContainer>\n        <h1>Forgot Password</h1>\n        <Form>\n          <TextField\n            variant=\"outlined\"\n            type=\"email\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Your Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Send Request</>}\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport SuccessMessage from '../components/Message/successMessage';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\nimport * as routes from '../constants/routes';\nimport * as userAction from '../actions/userAction';\nimport * as userConstants from '../constants/userConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst ForgotPassword = ({ history }) => {\n  const [newPassword, setNewPassword] = useState('');\n  const [token, setToken] = useState('');\n  const classes = useStyles();\n\n  const resetPasswordDetails = useSelector((state) => state.resetPasswordDetails);\n\n  const { loading, error, message, success } = resetPasswordDetails;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n\n    const token = queryParams.get('token') ? queryParams.get('token').trim() : null;\n\n    if (token) {\n      setToken(token);\n    } else {\n      history.push({\n        pathname: routes.LOGIN,\n      });\n    }\n  }, [dispatch, token, history]);\n\n  useEffect(() => {\n    if (success) {\n      setTimeout(() => {\n        history.push({\n          pathname: routes.LOGIN,\n        });\n      }, 3000);\n    }\n  }, [dispatch, success, history]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const resetPassworData = {\n      newPassword,\n      token,\n    };\n    dispatch(userAction.resetPassword(resetPassworData));\n  };\n\n  return (\n    <>\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\n      {success && <SuccessMessage header=\"Done\" message={message} reset={userConstants.FORGOT_PASSWORD_SEND_RSET} />}\n      <FormContainer>\n        <h1>Reset Password</h1>\n        <Form>\n          <TextField\n            variant=\"outlined\"\n            type=\"password\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"New Password\"\n            name=\"password\"\n            autoComplete=\"password\"\n            autoFocus\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Reset</>}\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../components/Message/errorMessage';\nimport FormContainer from '../components/FormContainer/FormContainer';\nimport { TextField, Button, CircularProgress, makeStyles } from '@material-ui/core/';\nimport * as routes from '../constants/routes';\nimport * as userAction from '../actions/userAction';\nimport * as userConstants from '../constants/userConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  prgressColor: {\n    color: '#fff',\n  },\n}));\n\nconst EmailVerification = ({ location, history }) => {\n  const [verificationCode, setVerificationCode] = useState('');\n  const classes = useStyles();\n\n  const userAuthData = useSelector((state) => state.userLogin);\n\n  const { userInfo, error, loading } = userAuthData;\n\n  const redirect = location.search ? location.search.split('=')[1] : routes.HOME;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [dispatch, userInfo, redirect, history]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(userAction.emailVerification(verificationCode));\n  };\n\n  return (\n    <>\n      {error && <ErrorMessage header=\"Auth Error\" message={error} reset={userConstants.RESET} />}\n      <FormContainer>\n        <h1>Verify Your Email</h1>\n        <Form>\n          <TextField\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"code\"\n            label=\"Verification Code\"\n            name=\"code\"\n            autoComplete=\"code\"\n            autoFocus\n            value={verificationCode}\n            onChange={(e) => setVerificationCode(e.target.value)}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={handleSubmit} disabled={loading}>\n            {loading ? <CircularProgress color=\"inherit\" className={classes.prgressColor} /> : <>Verify</>}\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default EmailVerification;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header/index';\nimport Footer from './components/Footer/Footer';\nimport Home from './pages/Home';\nimport Product from './pages/Product';\nimport Login from './pages/Login';\nimport Cart from './pages/Cart';\nimport PrivateRoute from './routes/PrivateRoute';\nimport AdminRoute from './routes/AdminRoute';\nimport Shipping from './pages/Shipping';\nimport Payment from './pages/Payment';\nimport Profile from './pages/Profile';\nimport PlaceOrder from './pages/PlaceOrder';\nimport OrderList from './pages/OrdersList';\nimport ProductList from './pages/ProductList';\nimport UserList from './pages/UserList';\nimport EditUser from './pages/EditUser';\nimport EditProduct from './pages/EditProduct';\nimport Order from './pages/Order';\nimport Logout from './pages/Logout';\nimport Register from './pages/Register';\nimport ForgotPassword from './pages/ForgotPassword';\nimport ResetPassword from './pages/ResetPassword';\nimport EmailVerification from './pages/EmailVerification';\nimport * as routes from './constants/routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Switch>\n            <Route exact={true} path={routes.HOME} component={Home} />\n            <Route exact={true} path={routes.PRODUCT} component={Product} />\n            <Route exact={true} path={routes.LOGIN} component={Login} />\n            <Route exact={true} path={routes.CART} component={Cart} />\n            <Route exact={true} path={routes.FORGOT_PASSWORD} component={ForgotPassword} />\n            <Route exact={true} path={routes.RESET_PASSWORD} component={ResetPassword} />\n            <PrivateRoute exact={true} path={routes.SHIPPING} component={Shipping} />\n            <PrivateRoute exact={true} path={routes.PAYMENT} component={Payment} />\n            <PrivateRoute exact={true} path={routes.PLACE_ORDER} component={PlaceOrder} />\n            <PrivateRoute exact={true} path={routes.ORDER} component={Order} />\n            <PrivateRoute exact={true} path={routes.PROFILE} component={Profile} />\n            <AdminRoute exact={true} path={routes.ORDERS} component={OrderList} />\n            <AdminRoute exact={true} path={routes.PRODUCTS} component={ProductList} />\n            <AdminRoute exact={true} path={routes.PRODUCT_EDIT} component={EditProduct} />\n            <AdminRoute exact={true} path={routes.USERS} component={UserList} />\n            <AdminRoute exact={true} path={routes.USER_EDIT} component={EditUser} />\n            <Route exact={true} path={routes.REGISTER} component={Register} />\n            <Route exact={true} path={routes.EMAIL_VERIFICATION} component={EmailVerification} />\n            <Route exact={true} path={routes.LOGOUT} component={Logout} />\n          </Switch>\n        </Container>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}